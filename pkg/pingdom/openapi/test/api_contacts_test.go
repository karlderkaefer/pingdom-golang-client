/*
Pingdom Public API

Testing ContactsAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/karlderkaefer/pingdom-golang-client/pkg/pingdom/openapi"
)

func Test_openapi_ContactsAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test ContactsAPIService AlertingContactsContactidDelete", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var contactid int32

		resp, httpRes, err := apiClient.ContactsAPI.AlertingContactsContactidDelete(context.Background(), contactid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ContactsAPIService AlertingContactsContactidGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var contactid int32

		resp, httpRes, err := apiClient.ContactsAPI.AlertingContactsContactidGet(context.Background(), contactid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ContactsAPIService AlertingContactsContactidPut", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var contactid int32

		resp, httpRes, err := apiClient.ContactsAPI.AlertingContactsContactidPut(context.Background(), contactid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ContactsAPIService AlertingContactsGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.ContactsAPI.AlertingContactsGet(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ContactsAPIService AlertingContactsPost", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.ContactsAPI.AlertingContactsPost(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
