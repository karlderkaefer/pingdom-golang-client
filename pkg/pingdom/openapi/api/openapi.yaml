openapi: 3.0.0
info:
  description: |
    # Welcome to the Pingdom API!
    The Pingdom API is a way for you to automate your interaction with the Pingdom system. With the API, you can create your own scripts or applications with most of the functionality you can find inside the Pingdom control panel.

    The Pingdom API is RESTful and HTTP-based. Basically, this means that the communication is made through normal HTTP requests.

    # Authentication
    Authentication is needed in order to use the Pingdom API, and for this a Pingdom API Token is required. You generate your Pingdom API Token inside My Pingdom. The Pingdom API Token has a property called “Access level” to define its permissions. All operations that create or modify something (e.g. checks) need the Read/Write permission. If you only need to read data using the API token, we recommend to set the access level to “Read access”.

    The authentication method for using tokens is HTTP Bearer Authentication (encrypted over HTTPS). This means that you will provide your token every time you make a request. No sessions are used.

    Request
    ```
    GET /checks HTTP/1.1
    Host: api.pingdom.com
    Authorization: Bearer ofOhK18Ca6w4S_XmInGv0QPkqly-rbRBBoHsp_2FEH5QnIbH0VZhRPO3tlvrjMIKQ36VapX
    ```

    Response
    ```
    HTTP/1.1 200 OK
    Content-Length: 13
    Content-Type: application/json
    {"checks":[]}
    ```

    ## Basic Auth
    For compatibility reasons, the Pingdom API allows to use HTTP Basic Authentication with tokens. In cases where this is necessary, input the API token as the username and leave the password field empty.

    An example request of how that would look like with the following API token: ofOhK18Ca6w4S_XmInGv0QPkqly-rbRBBoHsp_2FEH5QnIbH0VZhRPO3tlvrjMIKQ36VapX

    ```
    GET /checks HTTP/1.1
    Host: api.pingdom.com
    Authorization: Basic b2ZPaEsxOENhNnc0U19YbUluR3YwUVBrcWx5LXJiUkJCb0hzcF8yRkVINVFuSWJIMFZaaFJQTzN0bHZyak1JS1EzNlZhcFg6
    ```

    # Server Address
    The base server address is: https://api.pingdom.com

    Please note that HTTPS is required. You will not be able to connect through unencrypted HTTP.

    # Providing Parameters
    GET requests should provide their parameters as a query string, part of the URL.

    POST, PUT and DELETE requests should provide their parameters as a JSON. This should be part of the request body. Remember to add the proper content type header to the request: `Content-Type: application/json`.

    We still support providing parameters as a query string for POST, PUT and DELETE requests, but we recommend using JSON going forward. If you are using query strings, they should be part of the body, URL or a combination. The encoding of the query string should be standard URL-encoding, as provided by various programming libraries.

    When using `requests` library for Python, use `json` parameter instead of `data`. Due to the inner mechanisms of requests.post() etc. some endpoints may return responses not conforming to the documentation when dealing with `data` body.

    # HTTP/1.1 Status Code Definitions
    The HTTP status code returned by a successful API request is defined in the documentation for that method. Usually, this will be 200 OK.

    If something goes wrong, other codes may be returned. The API uses standard HTTP/1.1 status codes defined by [RFC 2616](https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html).

    # JSON Responses
    All responses are sent JSON-encoded. The specific responses (successful ones) are described in the documentation section for each method.

    However, if something goes wrong, our standard JSON error message (together with an appropriate status code) follows this format:
    ```
    {
        "error": {
            "statuscode": 403,
            "statusdesc": "Forbidden",
            "errormessage":" Something went wrong! This string describes what happened."
        }
    }
    ```
    See http://en.wikipedia.org/wiki/Json for more information on JSON.

    Please note that all attributes of a method response are not always present. A client application should never assume that a certain attribute is present in a response.

    # Limits
    The Pingdom API has usage limits to avoid individual rampant applications degrading the overall user experience. There are two layers of limits, the first cover a shorter period of time and the second a longer period. This enables you to "burst" requests for shorter periods. There are two HTTP headers in every response describing your limits status.

    The response headers are:
    * **Req-Limit-Short**
    * **Req-Limit-Long**

    An example of the values of these headers:
    * **Req-Limit-Short: Remaining: 394 Time until reset: 3589**
    * **Req-Limit-Long: Remaining: 71994 Time until reset: 2591989**

    In this case, we can see that the user has 394 requests left until the short limit is reached. In 3589 seconds, the short limit will be reset. In similar fashion, the long limit has 71994 requests left, and will be reset in 2591989 seconds.

    If limits are exceeded, an HTTP 429 error code with the message "Request limit exceeded, try again later" is sent back.

    # gzip
    Responses can be gzip-encoded on demand. This is nice if your bandwidth is limited, or if big results are causing performance issues.

    To enable gzip, simply add the following header to your request:

    Accept-Encoding: gzip

    # Best Practices
    ## Use caching
    If you are building a web page using the Pingdom API, we recommend that you do all API request on the server side, and if possible cache them. If you get any substantial traffic, you do not want to call the API each time you get a page hit, since this may cause you to hit the request limit faster than expected. In general, whenever you can cache data, do so.

    ## Send your user credentials in a preemptive manner
    Some HTTP clients omit the authentication header, and make a second request with the header when they get a 401 Unauthorized response. Please make sure you send the credentials directly, to avoid unnecessary requests.

    ## Use common sense
    Should be simple enough. For example, don't check for the status of a check every other second. The highest check resolution is one minute. Checking more often than that won't give you much of an advantage.

    ## The Internet is unreliable
    Networks in general are unreliable, and particularly one as large and complex as the Internet. Your application should not assume it will get an answer. There may be timeouts.

    # PHP Code Example
    **"This is too much to read. I just want to get started right now! Give me a simple example!"**

    Here is a short example of how you can use the API with PHP. You need the cURL extension for PHP.

    The example prints the current status of all your checks. This sample obviously focuses on Pingdom API code and does not worry about any potential problems connecting to the API, but your code should.

    Code:
    ```php
    <?php
        // Init cURL
        $curl = curl_init();
        // Set target URL
        curl_setopt($curl, CURLOPT_URL, "https://api.pingdom.com/api/3.1/checks");
        // Set the desired HTTP method (GET is default, see the documentation for each request)
        curl_setopt($curl, CURLOPT_CUSTOMREQUEST, "GET");
        // Add header with Bearer Authorization
        curl_setopt($curl, CURLOPT_HTTPHEADER, array("Authorization: Bearer 907c762e069589c2cd2a229cdae7b8778caa9f07"));
        // Ask cURL to return the result as a string
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
        // Execute the request and decode the json result into an associative array
        $response = json_decode(curl_exec($curl), true);
        // Check for errors returned by the API
        if (isset($response['error'])) {
            print "Error: " . $response['error']['errormessage'] . "\n";
            exit;
        }
        // Fetch the list of checks from the response
        $checksList = $response['checks'];
        // Print the names and statuses of all checks in the list
        foreach ($checksList as $check) {
            print $check['name'] . " is " . $check['status'] . "\n";
        }
    ?>
    ```

    Example output:
    ```
    Ubuntu Packages is up
    Google is up
    Pingdom is up
    My server 1 is down
    My server 2 is up
    ```

    If you are running PHP on Windows, you need to be sure that you have installed the CA certificates for HTTPS/SSL to work correctly. Please see the cURL manual for more information. As a quick (but unsafe) workaround, you can add the following cURL option to ignore certificate validation.

    `
    curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, 0);
    `

    # TMS Steps Vocabulary

    There are two types of transaction checks:
    <ul>
        <li><b>script</b>: the legacy TMS check created with predefined commands in the Pingdom UI or via the public API</li>
        <li><b>recording</b>: the TMS check created by recording performed actions in WPM recorder.
            More information about how to use it can be found in the
            <a class="default-link" href="https://documentation.solarwinds.com/en/success_center/wpm/Content/WPM-Use-the-WPM3-Recorder.htm">
                WPM recorder documentation</a>
        </li>
    </ul>

    ## Script transaction checks

      ### Commands
      Actions to be performed for the script TMS check

      Step Name                                 | "fn"                  | Required "args"     | Remarks
      ----------------------------------------- | --------------------- | --------------      | -------
      Go to URL                                 | go_to                 | url                 | There has to be **exactly one** go_to step
      Click                                     | click                 | element             | label, name or CSS selector
      Fill in field                             | fill                  | input, value        | input: label, name or CSS selector, value: text
      Check checkbox                            | check                 | checkbox            | label, name or CSS selector
      Uncheck checkbox                          | uncheck               | checkbox            | label, name or CSS selector
      Sleep for                                 | sleep                 | seconds             | number (e.g. 0.1)
      Select radio button                       | select_radio          | radio               | name of the radio button
      Select dropdown                           | select                | select, option      | select: label, name or CSS selector, option: content, value or CSS selector
      Basic auth login with                     | basic_auth            | username, password  | username and password as text
      Submit form                               | submit                | form                | name or CSS selector
      Wait for element                          | wait_for_element      | element             | label, name or CSS selector
      Wait for element to contain               | wait_for_contains     | element, value      | element: label, name or CSS selector, value: text

      ### Validations
      Verify the state of the page

      Step Name                                 | "fn"                  | Required "args"     | Remarks
      ----------------------------------------- | --------------------- | --------------      | -------
      URL should be                             | url                   | url                 | url to be verified
      Element should exist                      | exists                | element             | label, name or CSS selector
      Element shouldn't exist                   | not_exists            | element             | label, name or CSS selector
      Element should contain                    | contains              | element, value      | element: label, name or CSS selector, value: text
      Element shouldn't containt                | not_contains          | element, value      | element: label, name or CSS selector, value: text
      Text field should contain                 | field_contains        | input, value        | input: label, name or CSS selector, value: text
      Text field shouldn't contain              | field_not_contains    | input, value        | input: label, name or CSS selector, value: text
      Checkbox should be checked                | is_checked            | checkbox            | label, name or CSS selector
      Checkbox shouldn't be checked             | is_not_checked        | checkbox            | label, name or CSS selector
      Radio button should be selected           | radio_selected        | radio               | name of the radio button
      Dropdown with name should be selected     | dropdown_selected     | select, option      | select: label, name or CSS selector, option: content, value or CSS selector
      Dropdown with name shouldn't be selected  | dropdown_not_selected | select, option      | select: label, name or CSS selector, option: content, value or CSS selector

      ### Example steps

      ```
      "steps": [
      {
        "fn": "go_to",
        "args": {
          "url": "pingdom.com"
        }
      },
      {
        "fn": "click",
        "args": {
          "element": "START FREE TRIAL"
        }
      },
      {
        "fn": "url",
        "args": {
          "url": "https://www.pingdom.com/sign-up/"
        }
      }
      ]
      ```

    ## Recording transaction checks

    Each of check steps contains:
    <ul>
      <li><b>fn</b>: function name of the step</li>
      <li><b>args</b>: function arguments</li>
      <li><b>guid</b>: automatically generated identifier</li>
      <li><b>contains_navigate</b>: recorder sets it on true if the step would trigger a page navigation</li>
    </ul>

      ### Commands
      Actions to be performed for the recording TMS check

      Step Name                 | "fn"                      | Required "args"                 | Remarks
      ------------------------- | ------------------------- | ------------------------------- | -------
      Go to URL                 | wpm_go_to                 | url                             | Goes to the given url location
      Click                     | wpm_click                 | element, offsetX, offsetY       | **element**: label, name or CSS selector,</br> **offsetX/Y**: exact position of a click in the element
      Click in a exact location | wpm_click_xy              | element, x, y, scrollX, scrollY | **element**: label, name or CSS selector,</br> **x/y**: coordinates for the click (in viewport),</br> **scrollX/Y**: scrollbar position
      Fill                      | wpm_fill                  | input, value                    | **input**: target element,</br> **value**: text to fill the target
      Move mouse to element     | wpm_move_mouse_to_element | element, offsetX, offsetY       | **element**: target element,</br> **offsetX/Y**: exact position of the mouse in the element
      Select dropdown           | wpm_select_dropdown       | select, option                  | **select**: target element (drop-down),</br> **option**: text of the option to select
      Wait                      | wpm_wait                  | seconds                         | **seconds:** numbers of seconds to wait
      Close tab                 | wpm_close_tab             | -                               | Closes the latest tab on the tab stack

      ### Validations
      Verify the state of the page

      Step Name              | "fn"                     | Required "args"                                | Remarks
      ---------------------- | ------------------------ | ---------------------------------------------- | -------
      Contains text          | wpm_contains_timeout     | element, value, waitTime, useRegularExpression | **element**: label, name or CSS selector,</br> **value**: text to search for,</br> **waitTime**: time to wait for the value to appear,</br> **useRegularExpression**: use the value as a RegEx
      Does not contains text | wpm_not_contains_timeout | element, value, waitTime, useRegularExpression | **element**: label, name or CSS selector,</br> **value**: text to search for,</br> **waitTime**: time to wait for the value to appear,</br> **useRegularExpression**: use the value as a RegEx

      ### Metadata
      Recording checks contain metadata which is automatically generated by the WPM recorder. Modify with caution!
  title: Pingdom Public API
  version: "3.1"
  x-logo:
    url: https://tmp-new-api-doc.s3-eu-west-1.amazonaws.com/sw-pingdom-logo.svg
servers:
- url: https://api.pingdom.com/api/3.1
paths:
  /actions:
    get:
      description: Returns a list of actions (alerts) that have been generated for
        your account.
      parameters:
      - description: Only include actions generated later than this timestamp. Format
          is UNIX time.
        explode: true
        in: query
        name: from
        required: false
        schema:
          $ref: '#/components/schemas/actions_from'
        style: form
      - description: Only include actions generated prior to this timestamp. Format
          is UNIX time.
        explode: true
        in: query
        name: to
        required: false
        schema:
          $ref: '#/components/schemas/actions_to'
        style: form
      - description: Limits the number of returned results to the specified quantity.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          $ref: '#/components/schemas/actions_limit'
        style: form
      - description: Offset for listing.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          $ref: '#/components/schemas/actions_offset'
        style: form
      - description: "Comma-separated list of check identifiers. Limit results to\
          \ actions generated from these checks. Default: all checks."
        explode: true
        in: query
        name: checkids
        required: false
        schema:
          $ref: '#/components/schemas/actions_checkids'
        style: form
      - description: "Comma-separated list of user identifiers. Limit results to actions\
          \ sent to these users. Default: all users."
        explode: true
        in: query
        name: userids
        required: false
        schema:
          $ref: '#/components/schemas/actions_userids'
        style: form
      - description: "Comma-separated list of statuses. Limit results to actions with\
          \ these statuses. Default: all statuses."
        explode: true
        in: query
        name: status
        required: false
        schema:
          $ref: '#/components/schemas/actions_status'
        style: form
      - description: "Comma-separated list of via mediums. Limit results to actions\
          \ with these mediums. Default: all mediums."
        explode: true
        in: query
        name: via
        required: false
        schema:
          $ref: '#/components/schemas/actions_via'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/actions_alerts_entry'
          description: Successful HTTP Response
      summary: Returns a list of actions alerts.
      tags:
      - Actions
  /analysis/{checkid}:
    get:
      description: Returns a list of the latest root cause analysis results for a
        specified check.
      parameters:
      - explode: false
        in: path
        name: checkid
        required: true
        schema:
          $ref: '#/components/schemas/analysis_checkid'
        style: simple
      - description: Limits the number of returned results to the specified quantity.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          $ref: '#/components/schemas/analysis_limit'
        style: form
      - description: Offset for listing. (Requires limit.)
        explode: true
        in: query
        name: offset
        required: false
        schema:
          $ref: '#/components/schemas/analysis_offset'
        style: form
      - description: Return only results with timestamp of first test greater or equal
          to this value. Format is UNIX timestamp.
        explode: true
        in: query
        name: from
        required: false
        schema:
          $ref: '#/components/schemas/analysis_from'
        style: form
      - description: "Return only results with timestamp of first test less or equal\
          \ to this value. Format is UNIX timestamp. Default: current timestamp"
        explode: true
        in: query
        name: to
        required: false
        schema:
          $ref: '#/components/schemas/analysis_to'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/analysis_resp_attrs'
          description: Successful HTTP Response
      summary: Returns a list of the latest root cause analysis
      tags:
      - Analysis
  /analysis/{checkid}/{analysisid}:
    get:
      description: "Returns the raw result for a specified error analysis. This data\
        \ is primarily intended for internal use, but you might be interested in it\
        \ as well. However, there is no real documentation for this data at the moment.\
        \ In the future, we may add a new API method that provides a more user-friendly\
        \ format."
      parameters:
      - explode: false
        in: path
        name: checkid
        required: true
        schema:
          $ref: '#/components/schemas/analysis_checkid'
        style: simple
      - explode: false
        in: path
        name: analysisid
        required: true
        schema:
          $ref: '#/components/schemas/analysis_analysisid'
        style: simple
      responses:
        "200":
          description: Successful HTTP Response
      summary: Returns the raw result for a specified analysis.
      tags:
      - Analysis
  /checks:
    delete:
      description: Deletes a list of checks. THIS METHOD IS IRREVERSIBLE! You will
        lose all collected data. Be careful!
      parameters:
      - description: Comma-separated list of identifiers for checks to be deleted.
        example:
        - 1
        - 2
        - 3
        explode: false
        in: query
        name: delcheckids
        required: true
        schema:
          items:
            type: integer
          type: array
        style: form
      requestBody:
        content:
          application/json:
            example: "{\"delcheckids\":\"1,2,3\"}"
            schema:
              type: string
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_checks_delete_200_response'
          description: Successful operation
      summary: Deletes a list of checks.
      tags:
      - Checks
    get:
      description: Returns a list overview of all checks.
      parameters:
      - description: Limits the number of returned probes to the specified quantity.
          (Max value is 25000)
        example: 3
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25000
          type: integer
        style: form
      - description: Offset for listing. (Requires limit.)
        example: 0
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - description: "If set, show encryption setting for each check"
        example: false
        explode: true
        in: query
        name: showencryption
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "Include tag list for each check. Tags can be marked as \"a\"\
          \ or \"u\", for auto tagged or user tagged."
        example: false
        explode: true
        in: query
        name: include_tags
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Include severity level for each check.
        example: false
        explode: true
        in: query
        name: include_severity
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "Tag list separated by commas. As an example \"nginx,apache\"\
          \ would filter out all responses except those tagged nginx or apache"
        example: "nginx,apache,ssh"
        explode: true
        in: query
        name: tags
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Checks'
          description: Successful operation
      tags:
      - Checks
    post:
      description: Creates a new check with settings specified by provided parameters.
      requestBody:
        content:
          application/json:
            example:
              name: check_google
              host: www.google.com
              type: http
            schema:
              $ref: '#/components/schemas/CreateCheck'
          application/x-www-form-urlencoded:
            example:
              name: check_google
              host: www.google.com
              type: http
            schema:
              $ref: '#/components/schemas/CreateCheck'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_checks_post_200_response'
          description: Successful operation
      summary: Creates a new check.
      tags:
      - Checks
    put:
      description: Pause or change resolution for multiple checks in one bulk call.
      requestBody:
        content:
          application/json:
            example:
              paused: true
              resolution: 1
            schema:
              $ref: '#/components/schemas/_checks_put_request'
          application/x-www-form-urlencoded:
            example:
              paused: true
              resolution: 1
            schema:
              $ref: '#/components/schemas/_checks_put_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_checks_put_200_response'
          description: Successful operation
      summary: Pause or change resolution for multiple checks.
      tags:
      - Checks
  /checks/{checkid}:
    delete:
      description: Deletes a check. THIS METHOD IS IRREVERSIBLE! You will lose all
        collected data. Be careful!
      parameters:
      - description: Identifier of check to be deleted
        explode: false
        in: path
        name: checkid
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_checks__checkid__delete_200_response'
          description: Successful operation
      summary: Deletes a check.
      tags:
      - Checks
    get:
      description: Returns a detailed description of a specified check.
      parameters:
      - description: Identifier of check to be retrieved
        explode: false
        in: path
        name: checkid
        required: true
        schema:
          type: integer
        style: simple
      - description: Include team connections for check.
        explode: true
        in: query
        name: include_teams
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedCheck'
          description: Successful operation
      summary: Returns a detailed description of a check.
      tags:
      - Checks
    put:
      description: "Modify settings for a check. The provided settings will overwrite\
        \ previous values. Settings not provided will stay the same as before the\
        \ update. To clear an existing value, provide an empty value. Please note\
        \ that you cannot change the type of a check once it has been created."
      parameters:
      - description: Identifier of check to be updated
        explode: false
        in: path
        name: checkid
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            example:
              name: google_check
              host: www.google.com
              paused: false
            schema:
              $ref: '#/components/schemas/ModifyCheckSettings'
          application/x-www-form-urlencoded:
            example:
              name: google_check
              host: www.google.com
              paused: false
            schema:
              $ref: '#/components/schemas/ModifyCheckSettings'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_checks__checkid__put_200_response'
          description: Successful operation
      summary: Modify settings for a check.
      tags:
      - Checks
  /credits:
    get:
      description: "Returns information about remaining checks, SMS credits and SMS\
        \ auto-refill status."
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/credits_resp_attrs'
          description: Successful HTTP Response
      summary: Returns information about remaining credits
      tags:
      - Credits
  /maintenance:
    delete:
      description: Delete multiple maintenance windows. Note that only future maintenance
        windows can be deleted.
      parameters:
      - description: Comma-separated list of identifiers of maintenance windows to
          be deleted.
        example:
        - 1
        - 2
        - 3
        - 4
        - 5
        explode: false
        in: query
        name: maintenanceids
        required: true
        schema:
          items:
            type: integer
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/maintenance_delete_resp_attrs'
          description: Successful HTTP Response
      summary: Delete multiple maintenance windows.
      tags:
      - Maintenance
    get:
      description: Returns a list of user's maintenance windows.
      parameters:
      - description: Count of items to list.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          $ref: '#/components/schemas/maintenance_limit'
        style: form
      - description: Offset of the list.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          $ref: '#/components/schemas/maintenance_offset'
        style: form
      - description: Order by the specific property of the maintenance window.
        explode: true
        in: query
        name: orderby
        required: false
        schema:
          $ref: '#/components/schemas/maintenance_orderby'
        style: form
      - description: Order a-z for asc z-a for desc. Works only if orderby is specified.
        explode: true
        in: query
        name: order
        required: false
        schema:
          $ref: '#/components/schemas/maintenance_order'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/maintenance_resp_attrs'
          description: Successful HTTP Response
      tags:
      - Maintenance
    post:
      description: Create new maintenance window.
      requestBody:
        content:
          application/json:
            example:
              description: Some description of the maintenance window
              from: 1569580215
              to: 1569583815
            schema:
              $ref: '#/components/schemas/maintenance_post'
          application/x-www-form-urlencoded:
            example:
              description: Some description of the maintenance window
              from: 1569580215
              to: 1569583815
            schema:
              $ref: '#/components/schemas/maintenance_post'
        description: Description
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/maintenance_post_resp_attrs'
          description: Successful HTTP Response
      tags:
      - Maintenance
  /maintenance/{id}:
    delete:
      description: Delete the maintenance window. Note that only future maintenance
        window can be deleted.
      parameters:
      - description: id of maintenance window
        example: 3
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/maintenance_id'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/maintenance_id_delete_resp_attrs'
          description: Successful HTTP Response
      summary: Delete the maintenance window.
      tags:
      - Maintenance
    get:
      description: Returns the maintenance window specified by its id.
      parameters:
      - description: id of maintenance window
        example: 3
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/maintenance_id'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/maintenance_id_resp_attrs'
          description: Successful HTTP Response
      tags:
      - Maintenance
    put:
      description: Modify the maintenance window.
      parameters:
      - description: id of maintenance window
        example: 3
        explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/maintenance_id'
        style: simple
      requestBody:
        content:
          application/json:
            example:
              description: Modified maintenance window
              from: 1569580215
              to: 1569583815
            schema:
              $ref: '#/components/schemas/maintenance_id_put'
          application/x-www-form-urlencoded:
            example:
              description: Modified maintenance window
              from: 1569580215
              to: 1569583815
            schema:
              $ref: '#/components/schemas/maintenance_id_put'
        description: Description
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/maintenance_id_put_resp_attrs'
          description: Successful HTTP Response
      tags:
      - Maintenance
  /maintenance.occurrences/{id}:
    delete:
      description: Deletes the maintenance occurrence specified by its identifier.
        Note that only future occurrences can be deleted.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/maintenance.occurrences_id'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/maintenance.occurrences_id_delete_resp_attrs'
          description: Successful HTTP Response
      summary: Deletes the maintenance occurrence
      tags:
      - Maintenance occurrences
    get:
      description: Gets a maintenance occurrence details specified by its identifier.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/maintenance.occurrences_id'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/maintenance.occurrences_id_resp_attrs'
          description: Successful HTTP Response
      summary: Gets a maintenance occurrence details
      tags:
      - Maintenance occurrences
    put:
      description: Modifies a maintenance occurrence specified by its identifier.
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/maintenance.occurrences_id'
        style: simple
      requestBody:
        content:
          application/json:
            example:
              from: 1569580215
              to: 1569583815
            schema:
              $ref: '#/components/schemas/maintenance.occurrences_id_put'
          application/x-www-form-urlencoded:
            example:
              from: 1569580215
              to: 1569583815
            schema:
              $ref: '#/components/schemas/maintenance.occurrences_id_put'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/maintenance.occurrences_id_put_resp_attrs'
          description: Successful HTTP Response
      summary: Modifies a maintenance occurrence
      tags:
      - Maintenance occurrences
  /maintenance.occurrences:
    delete:
      description: Deletes multiple maintenance occurrences specified by their identifiers.
        Note that only future occurrences can be deleted.
      parameters:
      - example:
        - 1
        - 2
        - 3
        - 4
        - 5
        explode: true
        in: query
        name: occurenceids
        required: true
        schema:
          $ref: '#/components/schemas/maintenance.occurrences_delete'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/maintenance.occurrences_delete_resp_attrs'
          description: Successful HTTP Response
      summary: Deletes multiple maintenance occurrences
      tags:
      - Maintenance occurrences
    get:
      description: Returns a list of maintenance occurrences.
      parameters:
      - description: 'Maintenance window identifier. (List only occurrences of a specific
          maintenance window.)  '
        explode: true
        in: query
        name: maintenanceid
        required: false
        schema:
          $ref: '#/components/schemas/maintenance.occurrences_maintenanceid'
        style: form
      - description: "Effective from (unix timestamp). (List occurrences which are\
          \ effective from the specified unix timestamp. If not specified, current\
          \ timestamp is used.)"
        explode: true
        in: query
        name: from
        required: false
        schema:
          $ref: '#/components/schemas/maintenance.occurrences_from'
        style: form
      - description: Effective to (unix timestamp). (List occurrences which are effective
          to the specified unix timestamp.)
        explode: true
        in: query
        name: to
        required: false
        schema:
          $ref: '#/components/schemas/maintenance.occurrences_to'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/maintenance.occurrences_resp_attrs'
          description: Successful HTTP Response
      summary: Returns a list of maintenance occurrences.
      tags:
      - Maintenance occurrences
  /probes:
    get:
      description: Returns a list of all Pingdom probe servers for Uptime and Transaction
        checks.
      parameters:
      - description: Limits the number of returned probes to the specified quantity.
        example: 3
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Offset for listing. (Requires limit.)
        example: 0
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - description: Return only active probes.
        example: false
        explode: true
        in: query
        name: onlyactive
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Include old probes that are no longer in use.
        example: false
        explode: true
        in: query
        name: includedeleted
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Probes'
          description: Successful operation
      summary: Returns a list of Pingdom probe servers
      tags:
      - Probes
  /reference:
    get:
      description: "Get a reference of regions, timezones and date/time/number formats\
        \ and their identifiers."
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/References'
          description: Successful operation
      summary: "Get regions, timezone and date/time/number references"
      tags:
      - Reference
  /results/{checkid}:
    get:
      description: Return a list of raw test results for a specified check
      parameters:
      - explode: false
        in: path
        name: checkid
        required: true
        schema:
          $ref: '#/components/schemas/results_checkid'
        style: simple
      - description: End of period. Format is UNIX timestamp. Default value is current
          timestamp.
        explode: true
        in: query
        name: to
        required: false
        schema:
          $ref: '#/components/schemas/results_to'
        style: form
      - description: Start of period. Format is UNIX timestamp. Default value is 1
          day prior to `to`.
        explode: true
        in: query
        name: from
        required: false
        schema:
          $ref: '#/components/schemas/results_from'
        style: form
      - description: Filter to only show results from a list of probes. Format is
          a comma separated list of probe identifiers
        explode: true
        in: query
        name: probes
        required: false
        schema:
          $ref: '#/components/schemas/results_probes'
        style: form
      - description: "Filter to only show results with specified statuses. Format\
          \ is a comma separated list of (`down`, `up`, `unconfirmed`, `unknown`)"
        explode: true
        in: query
        name: status
        required: false
        schema:
          $ref: '#/components/schemas/results_status'
        style: form
      - description: Number of results to show (Will be set to 1000 if the provided
          value is greater than 1000)
        explode: true
        in: query
        name: limit
        required: false
        schema:
          $ref: '#/components/schemas/results_limit'
        style: form
      - description: Number of results to skip (Max value is `43200`)
        explode: true
        in: query
        name: offset
        required: false
        schema:
          $ref: '#/components/schemas/results_offset'
        style: form
      - description: Attach available root cause analysis identifiers to corresponding
          results
        explode: true
        in: query
        name: includeanalysis
        required: false
        schema:
          $ref: '#/components/schemas/results_includeanalysis'
        style: form
      - description: "Maximum response time (ms). If set, specified interval must\
          \ not be larger than 31 days."
        explode: true
        in: query
        name: maxresponse
        required: false
        schema:
          $ref: '#/components/schemas/results_maxresponse'
        style: form
      - description: "Minimum response time (ms). If set, specified interval must\
          \ not be larger than 31 days."
        explode: true
        in: query
        name: minresponse
        required: false
        schema:
          $ref: '#/components/schemas/results_minresponse'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/results_resp_attrs'
          description: Successful HTTP Response
      summary: Return a list of raw test results
      tags:
      - Results
  /single:
    get:
      description: "Performs a single test using a specified Pingdom probe against\
        \ a specified target. Please note that this method is meant to be used sparingly,\
        \ not to set up your own monitoring solution."
      parameters:
      - description: Query Parameters to chose
        explode: true
        in: query
        name: Query Parameters
        required: false
        schema:
          $ref: '#/components/schemas/_single_get_Query_Parameters_parameter'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_resp'
          description: Successful operation
      summary: Performs a single check.
      tags:
      - Single
  /summary.average/{checkid}:
    get:
      description: Get the average time / uptime value for a specified check and time
        period.
      parameters:
      - explode: false
        in: path
        name: checkid
        required: true
        schema:
          $ref: '#/components/schemas/summary.average_checkid'
        style: simple
      - description: Start time of period. Format is UNIX timestamp
        explode: true
        in: query
        name: from
        required: false
        schema:
          $ref: '#/components/schemas/summary.average_from'
        style: form
      - description: End time of period. Format is UNIX timestamp. Default is the
          current time
        explode: true
        in: query
        name: to
        required: false
        schema:
          $ref: '#/components/schemas/summary.average_to'
        style: form
      - description: Filter to only use results from a list of probes. Format is a
          comma separated list of probe identifiers. By default result from all probes
          are shown.
        explode: true
        in: query
        name: probes
        required: false
        schema:
          $ref: '#/components/schemas/summary.average_probes'
        style: form
      - description: Include uptime information
        explode: true
        in: query
        name: includeuptime
        required: false
        schema:
          $ref: '#/components/schemas/summary.average_includeuptime'
        style: form
      - description: Split response times into country groups
        explode: true
        in: query
        name: bycountry
        required: false
        schema:
          $ref: '#/components/schemas/summary.average_bycountry'
        style: form
      - description: Split response times into probe groups
        explode: true
        in: query
        name: byprobe
        required: false
        schema:
          $ref: '#/components/schemas/summary.average_byprobe'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/summary_resp_attrs'
          description: Successful HTTP Response
      summary: Get the average time/uptime value for a specified
      tags:
      - Summary.average
  /summary.hoursofday/{checkid}:
    get:
      description: Returns the average response time for each hour of the day (0-23)
        for a specific check over a selected time period. I.e. it shows you what an
        average day looks like during that time period.
      parameters:
      - explode: false
        in: path
        name: checkid
        required: true
        schema:
          $ref: '#/components/schemas/summary.hoursofday_checkid'
        style: simple
      - description: Start time of period. Format is UNIX timestamp. Default value
          is one week eariler than `to`.
        explode: true
        in: query
        name: from
        required: false
        schema:
          $ref: '#/components/schemas/summary.hoursofday_from'
        style: form
      - description: End time of period. Format is UNIX timestamp. Default value is
          current time.
        explode: true
        in: query
        name: to
        required: false
        schema:
          $ref: '#/components/schemas/summary.hoursofday_to'
        style: form
      - description: Filter to only use results from a list of probes. Format is a
          comma separated list of probe identifiers. By default all probes results
          are returned.
        explode: true
        in: query
        name: probes
        required: false
        schema:
          $ref: '#/components/schemas/summary.hoursofday_probes'
        style: form
      - description: "If true, use the user's local time zone for results (from and\
          \ to parameters should still be specified in UTC). If false, use UTC for\
          \ results."
        explode: true
        in: query
        name: uselocaltime
        required: false
        schema:
          $ref: '#/components/schemas/summary.hoursofday_uselocaltime'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/summary.hoursofday_resp_attrs'
          description: Successful HTTP Response
      summary: Returns the average response time for each hour.
      tags:
      - Summary.hoursofday
  /summary.outage/{checkid}:
    get:
      description: "Get a list of status changes for a specified check and time period.\
        \ If order is speficied to descending, the list is ordered by newest first.\
        \ (Default is ordered by oldest first.)"
      parameters:
      - explode: false
        in: path
        name: checkid
        required: true
        schema:
          $ref: '#/components/schemas/summary.outage_checkid'
        style: simple
      - description: Start time of period. Format is UNIX timestamp. Default value
          is one week earlier than `to`.
        explode: true
        in: query
        name: from
        required: false
        schema:
          $ref: '#/components/schemas/summary.outage_from'
        style: form
      - description: End time of period. Format is UNIX timestamp. Default value is
          the current time.
        explode: true
        in: query
        name: to
        required: false
        schema:
          $ref: '#/components/schemas/summary.outage_to'
        style: form
      - description: Sorting order of outages. Ascending or descending.
        explode: true
        in: query
        name: order
        required: false
        schema:
          $ref: '#/components/schemas/summary.outage_order'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/summary.outage_resp_attrs'
          description: Successful HTTP Response
      summary: Get a list of status changes for a specified check
      tags:
      - Summary.outage
  /summary.performance/{checkid}:
    get:
      description: "For a given interval in time, return a list of sub intervals with\
        \ the given resolution. Useful for generating graphs. A sub interval may be\
        \ a week, a day or an hour depending on the choosen resolution."
      parameters:
      - explode: false
        in: path
        name: checkid
        required: true
        schema:
          $ref: '#/components/schemas/summary.performance_checkid'
        style: simple
      - description: Start time of period. Format is UNIX timestamp. Default value
          is 10 intervals earlier than `to`.
        explode: true
        in: query
        name: from
        required: false
        schema:
          $ref: '#/components/schemas/summary.performance_from'
        style: form
      - description: End time of period. Format is UNIX timestamp. Default value is
          the current time.
        explode: true
        in: query
        name: to
        required: false
        schema:
          $ref: '#/components/schemas/summary.performance_to'
        style: form
      - description: Interval size
        explode: true
        in: query
        name: resolution
        required: false
        schema:
          $ref: '#/components/schemas/summary.performance_resolution'
        style: form
      - description: Include uptime information.
        explode: true
        in: query
        name: includeuptime
        required: false
        schema:
          $ref: '#/components/schemas/summary.performance_includeuptime'
        style: form
      - description: "Filter to only use results from a list of probes. Format is\
          \ a comma separated list of probe identifiers. Can not be used if includeuptime\
          \ is set to true. Also note that this can cause intervals to be omitted,\
          \ since there may be no results from the desired probes in them. By deafult\
          \ results from all probes are returned."
        explode: true
        in: query
        name: probes
        required: false
        schema:
          $ref: '#/components/schemas/summary.performance_probes'
        style: form
      - description: Sorting order of sub intervals. Ascending or descending.
        explode: true
        in: query
        name: order
        required: false
        schema:
          $ref: '#/components/schemas/summary.performance_order'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/summary.performance_resp_attrs'
          description: Successful HTTP Response
      summary: For a given interval return a list of subintervals
      tags:
      - Summary.performance
  /summary.probes/{checkid}:
    get:
      description: Get a list of probes that performed tests for a specified check
        during a specified period.
      parameters:
      - explode: false
        in: path
        name: checkid
        required: true
        schema:
          $ref: '#/components/schemas/summary.probes_checkid'
        style: simple
      - description: Start time of period. Format is UNIX timestamp
        explode: true
        in: query
        name: from
        required: true
        schema:
          $ref: '#/components/schemas/summary.probes_from'
        style: form
      - description: End time of period. Format is UNIX timestamp. The defualt value
          is current time.
        explode: true
        in: query
        name: to
        required: false
        schema:
          $ref: '#/components/schemas/summary.probes_to'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/summary.probes_resp_attrs'
          description: Successful HTTP Response
      summary: Get a list of probes that performed tests
      tags:
      - Summary.probes
  /alerting/teams:
    get:
      description: Returns a list of all teams and their members
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Teams'
          description: Successful operation
      tags:
      - Teams
    post:
      description: Creates a new team with or without members
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTeam'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_alerting_teams_post_200_response'
          description: Successful operation
      summary: Creates a new team
      tags:
      - Teams
  /alerting/teams/{teamid}:
    delete:
      description: Deletes a team
      parameters:
      - description: ID of the team to be deleted
        explode: false
        in: path
        name: teamid
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_alerting_teams__teamid__delete_200_response'
          description: Message indicating a successful deletion
      tags:
      - Teams
    get:
      description: Returns a team with its members
      parameters:
      - description: ID of the team to be retrieved
        explode: false
        in: path
        name: teamid
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team_ID'
          description: Successful operation
      tags:
      - Teams
    put:
      description: Updates a team
      parameters:
      - description: ID of the team to be retrieved
        explode: false
        in: path
        name: teamid
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTeam'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team_ID'
          description: Successful operation
      tags:
      - Teams
  /alerting/contacts:
    get:
      description: Returns a list of all contacts with their contact methods (notification
        targets)
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactsList'
          description: Successful operation
      summary: Returns a list of all contacts
      tags:
      - Contacts
    post:
      description: Creates a new contact with at least one contact method (notification
        target)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateContact'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_alerting_contacts_post_200_response'
          description: Successful operation
      summary: Creates a new contact
      tags:
      - Contacts
  /alerting/contacts/{contactid}:
    delete:
      description: Deletes a contact with its contact methods (notification targets)
      parameters:
      - description: ID of contact to be deleted
        explode: false
        in: path
        name: contactid
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_alerting_contacts__contactid__delete_200_response'
          description: Successful operation
      summary: Deletes a contact with its contact methods
      tags:
      - Contacts
    get:
      description: Returns a contact with its contact methods (notification targets)
      parameters:
      - description: ID of contact to be retrieved
        explode: false
        in: path
        name: contactid
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: Successful operation
      summary: Returns a contact with its contact methods
      tags:
      - Contacts
    put:
      description: Update a contact with at least one contact method (notification
        target)
      parameters:
      - description: ID of contact to be updated
        explode: false
        in: path
        name: contactid
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateContact'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: Successful operation
      summary: Update a contact
      tags:
      - Contacts
  /traceroute:
    get:
      description: Perform a traceroute to a specified target from a specified Pingdom
        probe.
      parameters:
      - description: Target host.
        example: pingdom.com
        explode: true
        in: query
        name: host
        required: true
        schema:
          type: string
        style: form
      - description: Probe identifier.
        example: 23
        explode: true
        in: query
        name: probeid
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Traceroute'
          description: Successful operation
      summary: Perform a traceroute
      tags:
      - Traceroute
  /tms/check:
    get:
      operationId: getAllChecks
      parameters:
      - description: Specifies whether to return an extended tags representation in
          the response (with type and count).
        explode: true
        in: query
        name: extended_tags
        required: false
        schema:
          type: boolean
        style: form
      - description: "Tag list separated by commas. As an example \"nginx,apache\"\
          \ would filter out all responses except those tagged nginx or apache"
        example:
        - nginx
        - apache
        explode: false
        in: query
        name: tags
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Filter to return only checks of a given type (a TMS `script`\
          \ or a WPM `recording`). If not provided, all checks are returned."
        explode: true
        in: query
        name: type
        required: false
        schema:
          enum:
          - script
          - recording
          type: string
        style: form
      - description: Limit of returned checks
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: "1000"
          type: string
        style: form
      - description: Offset of returned checks
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: "0"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChecksAll'
          description: Description of all checks for a user.
      summary: Returns a list overview of all transaction checks.
      tags:
      - TMS Checks
    post:
      operationId: addCheck
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckWithoutID'
        description: Specifies the check to be added
        required: true
        x-go-name: Check
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckSimple'
          description: Simplified description of an added check.
      summary: Creates a new transaction check.
      tags:
      - TMS Checks
  /tms/check/{cid}:
    delete:
      operationId: deleteCheck
      parameters:
      - description: Specifies the id of the check to be deleted
        explode: false
        in: path
        name: cid
        required: true
        schema:
          format: int64
          type: integer
        style: simple
        x-go-name: CheckID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleteCheck_200_response'
          description: Message indicating a successful modification
      summary: Deletes a transaction check.
      tags:
      - TMS Checks
    get:
      operationId: getCheck
      parameters:
      - description: Specifies whether to return an extended tags representation in
          the response (with type and count).
        explode: true
        in: query
        name: extended_tags
        required: false
        schema:
          type: boolean
        style: form
      - description: Specifies the id of the check to be fetched
        explode: false
        in: path
        name: cid
        required: true
        schema:
          format: int64
          type: integer
        style: simple
        x-go-name: CheckID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckWithoutIDGET'
          description: Detailed description of specified check.
      summary: Returns a single transaction check.
      tags:
      - TMS Checks
    put:
      operationId: modifyCheck
      parameters:
      - description: Specifies the id of the check to be modified
        explode: false
        in: path
        name: cid
        required: true
        schema:
          format: int64
          type: integer
        style: simple
        x-go-name: CheckID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckWithoutIDPUT'
        description: Specifies the data to be modified for the check
        required: true
        x-go-name: Check
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckWithoutIDGET'
          description: Detailed description of a modified check.
      summary: Modify settings for transaction check.
      tags:
      - TMS Checks
  /tms/check/{check_id}/report/status:
    get:
      description: "Get a list of status changes for a specified check and time period.\
        \ If order is speficied to descending, the list is ordered by newest first.\
        \ (The default is ordered by oldest first.) It can be used to display a detailed\
        \ view of a check."
      operationId: getCheckReportStatus
      parameters:
      - description: Specifies the id of the check for which the status change report
          will be fetched
        explode: false
        in: path
        name: check_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Start time of period. The format is `RFC 3339` (properly URL-encoded!).
          The default value is one week earlier than `to`
        explode: true
        in: query
        name: from
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: End time of period. The format is `RFC 3339` (properly URL-encoded!).
          The default value is the current time
        explode: true
        in: query
        name: to
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Sorting order of outages. Ascending or descending
        example:
        - desc
        explode: true
        in: query
        name: order
        required: false
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportStatusSingle'
          description: Status change report for a single transaction check
      summary: Returns a status change report for a single transaction check
      tags:
      - TMS Checks
  /tms/check/report/status:
    get:
      description: "Get a list of status changes for all transaction check in the\
        \ current organization from the requested time period. If order is speficied\
        \ to descending, the list of statuses within each check is ordered by newest\
        \ first. (The default is ordered by oldest first.) It can be used to display\
        \ a list view of all checks and their current status."
      operationId: getCheckReportStatusAll
      parameters:
      - description: Start time of period. The format is `RFC 3339` (properly URL-encoded!).
          The default value is one week earlier than `to`
        explode: true
        in: query
        name: from
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: End time of period. The format is `RFC 3339` (properly URL-encoded!).
          The default value is the current time
        explode: true
        in: query
        name: to
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Sorting order of outages. Ascending or descending
        example:
        - desc
        explode: true
        in: query
        name: order
        required: false
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
        style: form
      - description: Limit of returned checks
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: "100"
          type: string
        style: form
      - description: Offset of returned checks
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: "0"
          type: string
        style: form
      - description: Omits checks without any results within specified time
        explode: true
        in: query
        name: omit_empty
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportStatusAll'
          description: Status change report for all transaction check in the current
            organization
      summary: Returns a status change report for all transaction checks in the current
        organization
      tags:
      - TMS Checks
  /tms/check/{check_id}/report/performance:
    get:
      description: "For a given period of time, return a list of time intervals with\
        \ the given resolution. An interval may be a week, a day or an hour depending\
        \ on the chosen resolution. It can be used to display a detailed view of a\
        \ check with information about its steps and generate graphs."
      operationId: getCheckReportPerformance
      parameters:
      - description: Specifies the id of the check for which the performance report
          will be fetched
        explode: false
        in: path
        name: check_id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: "Start time of period. The format is `RFC 3339` (properly URL-encoded!).\
          \ The default value is 10 times the resolution (10 hours, 10 day, 10 weeks)\
          \ earlier than `to`. The value is extended to the nearest hour, day or week,\
          \ depending on the 'resolution' parameter and configured time zone of the\
          \ account."
        explode: true
        in: query
        name: from
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "End time of period. The format is `RFC 3339` (properly URL-encoded!).\
          \ The default value is the current time. The value is extended to the nearest\
          \ hour, day or week, depending on the 'resolution' parameter and configured\
          \ time zone of the account."
        explode: true
        in: query
        name: to
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Sorting order of outages. Ascending or descending
        example:
        - desc
        explode: true
        in: query
        name: order
        required: false
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
        style: form
      - description: "Size of an interval for which the results are calculated. For\
          \ the `hour` resolution, the max allowed period is one week and 1 day. For\
          \ the `day` resolution, the max allowed period is 6 months and 1 day."
        example: day
        explode: true
        in: query
        name: resolution
        required: false
        schema:
          default: hour
          enum:
          - hour
          - day
          - week
          type: string
        style: form
      - description: "Include uptime information. Adds field downtime, uptime, and\
          \ unmonitored to the interval array objects."
        explode: true
        in: query
        name: include_uptime
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportPerformance'
          description: Performance report for a single transaction check
      summary: Returns a performance report for a single transaction check
      tags:
      - TMS Checks
components:
  responses:
    checkAddedResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CheckSimple'
      description: Simplified description of an added check.
    checkDeletedResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/deleteCheck_200_response'
      description: Message indicating a successful modification
    checkDetailed:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CheckWithoutIDGET'
      description: Detailed description of specified check.
    checkModifiedResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CheckWithoutIDGET'
      description: Detailed description of a modified check.
    checksAll:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ChecksAll'
      description: Description of all checks for a user.
    reportStatusSingle:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReportStatusSingle'
      description: Status change report for a single transaction check
    reportStatusAll:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReportStatusAll'
      description: Status change report for all transaction check in the current organization
    reportPerformance:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReportPerformance'
      description: Performance report for a single transaction check
  schemas:
    actions_from:
      type: integer
    actions_to:
      type: integer
    actions_limit:
      default: 100
      type: integer
    actions_offset:
      default: 0
      type: integer
    actions_checkids:
      type: string
    actions_userids:
      type: string
    actions_status:
      type: string
    actions_via:
      type: string
    actions_alerts_entry:
      example:
        actions:
          alerts:
          - sentto: 46-555555
            messageshort: up
            time: "1292248276"
            messagefull: "PingdomAlert UP: MyCheck (example.com) is UP again at 2010-12-13\
              \ 14:50:54. Downtime: 12m."
            userid: "111250"
            checkid: "241688"
            charged: "true"
            username: John Doe
            via: sms
            status: delivered
          - sentto: 46-555555
            messageshort: up
            time: "1292248276"
            messagefull: "PingdomAlert UP: MyCheck (example.com) is UP again at 2010-12-13\
              \ 14:50:54. Downtime: 12m."
            userid: "111250"
            checkid: "241688"
            charged: "true"
            username: John Doe
            via: sms
            status: delivered
      properties:
        actions:
          $ref: '#/components/schemas/actions_alerts_entry_actions'
    analysis_checkid:
      type: integer
    analysis_analysisid:
      type: integer
    analysis_limit:
      default: 100
      type: integer
    analysis_offset:
      default: 0
      type: integer
    analysis_from:
      default: 0
      type: integer
    analysis_to:
      type: integer
    analysis_resp_attrs:
      example:
        analysis:
        - timefirsttest: 1290441826
          id: 28739021
          timeconfirmtest: 1290441865
        - timefirsttest: 1290441826
          id: 28739021
          timeconfirmtest: 1290441865
      properties:
        analysis:
          items:
            $ref: '#/components/schemas/analysis_resp_attrs_analysis_inner'
          type: array
    Tag:
      properties:
        name:
          example: apache
          type: string
        type:
          example: a
          type: string
        count:
          example: 2
          type: integer
      type: object
    Check:
      properties:
        id:
          example: 100
          type: integer
        name:
          example: mycheck
          type: string
        lasterrortime:
          description: Timestamp of last error (if any). Format is UNIX timestamp
          example: 1297446423
          type: integer
        lasttesttime:
          description: Timestamp of last test (if any). Format is UNIX timestamp
          example: 1300977363
          type: integer
        lastresponsetime:
          description: Response time (in milliseconds) of last test.
          example: 355
          type: integer
        lastdownstart:
          description: Timestamp of start of last check down (if any). Format is UNIX
            timestamp.
          example: 1300977363
          type: integer
        lastdownend:
          description: Timestamp of end of last check down (if any). Format is UNIX
            timestamp. During a downtime it will be lasttesttime.
          example: 1300977463
          type: integer
        status:
          enum:
          - up
          - down
          - unconfirmed_down
          - unknown
          - paused
          type: string
        resolution:
          description: How often should the check be tested? (minutes)
          type: integer
        hostname:
          description: Target host
          type: string
        created:
          description: Creating time. Format is UNIX timestamp
          type: integer
        tags:
          description: List of tags for check
          items:
            $ref: '#/components/schemas/Tag'
          type: array
        ipv6:
          description: Use ipv6 instead of ipv4
          type: boolean
      type: object
    CheckWithStringType:
      allOf:
      - $ref: '#/components/schemas/Check'
      example:
        type: http
      properties:
        type:
          example: http
          type: string
    Counts:
      example:
        total: 55
        filtered: 5
        limited: 3
      properties:
        total:
          description: Total number of checks
          example: 55
          type: integer
        limited:
          description: Number of checks after tags filter was applied
          example: 3
          type: integer
        filtered:
          description: Number of checks after limit was applied
          example: 5
          type: integer
      type: object
    Checks:
      example:
        checks:
        - type: http
        - type: http
        counts:
          total: 55
          filtered: 5
          limited: 3
      properties:
        checks:
          items:
            $ref: '#/components/schemas/CheckWithStringType'
          type: array
        counts:
          $ref: '#/components/schemas/Counts'
      type: object
    HttpCertificateAttributes:
      properties:
        verify_certificate:
          default: true
          description: Treat target site as down if an invalid/unverifiable certificate
            is found.
          type: boolean
        ssl_down_days_before:
          default: 0
          description: Treat the target site as down if a certificate expires within
            the given number of days. This parameter will be ignored if `verify_certificate`
            is set to `false`.
          type: integer
      type: object
    HttpAttributesBase:
      properties:
        url:
          description: Path to target on server
          example: my.pingdom.com
          type: string
        encryption:
          description: Connection encryption
          example: true
          type: boolean
        port:
          description: Target port
          example: 443
          type: integer
        shouldcontain:
          description: "Target site should contain this string. Note! This parameter\
            \ cannot be used together with the parameter “shouldnotcontain”, use only\
            \ one of them in your request."
          example: Expected string
          type: string
        shouldnotcontain:
          description: "Target site should NOT contain this string. Note! This parameter\
            \ cannot be used together with the parameter “shouldcontain”, use only\
            \ one of them in your request."
          example: This should not appear on checked site
          type: string
        postdata:
          description: "Data that should be posted to the web page, for example submission\
            \ data for a sign-up or login form. The data needs to be formatted in\
            \ the same way as a web browser would send it to the web server"
          example: Data to be send to server
          type: string
        requestheaders:
          description: "Custom HTTP header. The entry value should contain a one-element\
            \ string array. The element should contain `headerName` and `headerValue`\
            \ colon-separated. To add more than one header send other parameters named\
            \ `requestheaders{number}`."
          items:
            type: string
          type: array
        verify_certificate:
          default: true
          description: Treat target site as down if an invalid/unverifiable certificate
            is found.
          type: boolean
        ssl_down_days_before:
          default: 0
          description: Treat the target site as down if a certificate expires within
            the given number of days. This parameter will be ignored if `verify_certificate`
            is set to `false`. It will appear provided `verify_certificate` is true
            and `ssl_down_days_before` value is greater than or equals 1.
          type: integer
      type: object
    HttpAttributesSet:
      allOf:
      - $ref: '#/components/schemas/HttpAttributesBase'
      properties:
        auth:
          description: "Username and password, colon separated."
          example: User:e4gh51!
          type: string
    HttpAttributesGet:
      allOf:
      - $ref: '#/components/schemas/HttpAttributesBase'
      example:
        password: e4gh51!
        username: User
      properties:
        username:
          description: Username for target HTTP authentication
          example: User
          type: string
        password:
          description: Password for target HTTP authentication
          example: e4gh51!
          type: string
    DetailedHttpAttributes:
      properties:
        type:
          $ref: '#/components/schemas/DetailedHttpAttributes_type'
      type: object
    HttpCustomAttributes:
      allOf:
      - $ref: '#/components/schemas/HttpCertificateAttributes'
      properties:
        url:
          description: Path to target on server
          example: /phpMyAdmin.conf
          type: string
        encryption:
          description: Connection encryption
          example: false
          type: boolean
        port:
          description: Target port
          example: 80
          type: integer
        additionalurls:
          description: Full URL (including hostname) to target additional XML file
          type: string
      required:
      - url
      type: object
    DetailedHttpCustomAttributes:
      properties:
        type:
          $ref: '#/components/schemas/DetailedHttpCustomAttributes_type'
      type: object
    TcpAttributes:
      properties:
        port:
          description: Target port
          example: 22
          type: integer
        stringtosend:
          description: String to send
          example: Raw data to be send
          type: string
        stringtoexpect:
          description: String to expect in response
          example: Raw data expected to be received
          type: string
      required:
      - port
      type: object
    DetailedTcpAttributes:
      properties:
        type:
          $ref: '#/components/schemas/DetailedTcpAttributes_type'
      type: object
    DnsAttributes:
      properties:
        nameserver:
          description: DNS server to use
          example: 8.8.8.8
          type: string
        expectedip:
          description: Expected IP
          example: 104.20.90.241
          type: string
      required:
      - expectedip
      - nameserver
      type: object
    DetailedDnsAttributes:
      properties:
        type:
          $ref: '#/components/schemas/DetailedDnsAttributes_type'
      type: object
    UdpAttributes:
      properties:
        port:
          description: Target port
          example: 53
          type: integer
        stringtosend:
          description: String to send
          example: Raw data to be send
          type: string
        stringtoexpect:
          description: String to expect in response
          example: Raw data expected to be received
          type: string
      required:
      - port
      - stringtoexpect
      - stringtosend
      type: object
    DetailedUdpAttributes:
      properties:
        type:
          $ref: '#/components/schemas/DetailedUdpAttributes_type'
      type: object
    SmtpAttributesBase:
      properties:
        port:
          description: Target port
          example: 25
          type: integer
        encryption:
          description: Connection encryption
          example: true
          type: boolean
        stringtoexpect:
          description: String to expect in response
          type: string
      type: object
    SmtpAttributesSet:
      allOf:
      - $ref: '#/components/schemas/SmtpAttributesBase'
      properties:
        auth:
          description: Username and password colon separated for target SMTP authentication
          example: User:e4gh51!
          type: string
    SmtpAttributesGet:
      allOf:
      - $ref: '#/components/schemas/SmtpAttributesBase'
      properties:
        username:
          description: Username for target SMTP authentication
          example: User
          type: string
        password:
          description: Password for target SMTP authentication
          example: e4gh51!
          type: string
    DetailedSmtpAttributes:
      properties:
        type:
          $ref: '#/components/schemas/DetailedSmtpAttributes_type'
      type: object
    Pop3Attributes:
      properties:
        port:
          description: Target port
          example: 110
          type: integer
        stringtoexpect:
          description: String to expect in response
          example: Raw data expected to be received
          type: string
      type: object
    DetailedPop3Attributes:
      properties:
        type:
          $ref: '#/components/schemas/DetailedPop3Attributes_type'
      type: object
    ImapAttributes:
      properties:
        port:
          description: Target port
          example: 143
          type: integer
        stringtoexpect:
          description: String to expect in response
          example: Raw data expected to be received
          type: string
      type: object
    DetailedImapAttributes:
      properties:
        type:
          $ref: '#/components/schemas/DetailedImapAttributes_type'
      type: object
    DetailedCheckAttributes:
      allOf:
      - $ref: '#/components/schemas/Check'
      properties:
        probe_filters:
          description: Filters used for probe selections
          example:
          - "region: EU"
          items:
            type: string
          type: array
        sendnotificationwhendown:
          example: 6
          type: integer
        notifyagainevery:
          example: 5
          type: integer
        notifywhenbackup:
          example: true
          type: boolean
        responsetime_threshold:
          example: false
          type: boolean
        custom_message:
          example: Important check is down!
          type: string
        integrationids:
          example:
          - 74356
          - 74358
          items:
            type: integer
          type: array
      type: object
    DetailedCheckHttp:
      example:
        check:
          integrationids:
          - 74356
          - 74358
          notifyagainevery: 5
          custom_message: Important check is down!
          sendnotificationwhendown: 6
          notifywhenbackup: true
          probe_filters:
          - "region: EU"
          type:
            http:
              password: e4gh51!
              username: User
          responsetime_threshold: false
      properties:
        check:
          $ref: '#/components/schemas/DetailedCheckHttp_check'
      type: object
    DetailedCheckHttpCustom:
      properties:
        check:
          $ref: '#/components/schemas/DetailedCheckHttpCustom_check'
      type: object
    DetailedCheckTcp:
      properties:
        check:
          $ref: '#/components/schemas/DetailedCheckTcp_check'
      type: object
    DetailedCheckDns:
      properties:
        check:
          $ref: '#/components/schemas/DetailedCheckDns_check'
      type: object
    DetailedCheckUdp:
      properties:
        check:
          $ref: '#/components/schemas/DetailedCheckUdp_check'
      type: object
    DetailedCheckSmtp:
      properties:
        check:
          $ref: '#/components/schemas/DetailedCheckSmtp_check'
      type: object
    DetailedCheckPop3:
      properties:
        check:
          $ref: '#/components/schemas/DetailedCheckPop3_check'
      type: object
    DetailedCheckImap:
      properties:
        check:
          $ref: '#/components/schemas/DetailedCheckImap_check'
      type: object
    DetailedCheck:
      oneOf:
      - $ref: '#/components/schemas/DetailedCheckHttp'
      - $ref: '#/components/schemas/DetailedCheckHttpCustom'
      - $ref: '#/components/schemas/DetailedCheckTcp'
      - $ref: '#/components/schemas/DetailedCheckDns'
      - $ref: '#/components/schemas/DetailedCheckUdp'
      - $ref: '#/components/schemas/DetailedCheckSmtp'
      - $ref: '#/components/schemas/DetailedCheckPop3'
      - $ref: '#/components/schemas/DetailedCheckImap'
    CreateCheck:
      example:
        integrationids:
        - 6
        - 6
        paused: false
        notifyagainevery: 0
        sendnotificationwhendown: 2
        notifywhenbackup: true
        type: http
        resolution: 5
        responsetime_threshold: 30000
        teamids: teamids
        tags:
        - tags
        - tags
        custom_message: custom_message
        userids: userids
        ipv6: false
        name: mycheck
        host: www.example.com
        probe_filters:
        - probe_filters
        - probe_filters
      oneOf:
      - $ref: '#/components/schemas/HttpAttributesSet'
      - $ref: '#/components/schemas/HttpCustomAttributes'
      - $ref: '#/components/schemas/TcpAttributes'
      - $ref: '#/components/schemas/DnsAttributes'
      - $ref: '#/components/schemas/UdpAttributes'
      - $ref: '#/components/schemas/SmtpAttributesSet'
      - $ref: '#/components/schemas/Pop3Attributes'
      - $ref: '#/components/schemas/ImapAttributes'
      properties:
        name:
          description: Check name
          example: mycheck
          type: string
        host:
          description: Target host
          example: www.example.com
          type: string
        type:
          description: Type of check
          enum:
          - http
          - httpcustom
          - tcp
          - ping
          - dns
          - udp
          - smtp
          - pop3
          - imap
          example: http
          type: string
        paused:
          default: false
          type: boolean
        resolution:
          default: 5
          description: How often should the check be tested? (minutes)
          enum:
          - 1
          - 5
          - 15
          - 30
          - 60
          example: 5
          type: integer
        userids:
          description: "User identifiers. For example userids=154325,465231,765871"
          type: string
        sendnotificationwhendown:
          default: 2
          description: Send notification when down X times
          example: 2
          type: integer
        notifyagainevery:
          default: 0
          description: Notify again every n result. 0 means that no extra notifications
            will be sent.
          type: integer
        notifywhenbackup:
          default: true
          description: Notify when back up again
          example: true
          type: boolean
        tags:
          description: List of tags for check. The maximum length of a tag is 64 characters.
          items:
            type: string
          type: array
        probe_filters:
          description: "Filters used for probe selections. Overwrites previous filters\
            \ for check. To remove all filters from a check, use an empty value. Comma\
            \ separated key:value pairs. Currently only region is supported. Possible\
            \ values are 'EU', 'NA', 'APAC' and 'LATAM'. For example, \"region: NA\"\
            ."
          items:
            type: string
          type: array
        ipv6:
          default: false
          description: "Use ipv6 instead of ipv4, if an IP address is provided as\
            \ host this will be overrided by the IP address version"
          type: boolean
        responsetime_threshold:
          default: 30000
          description: Triggers a down alert if the response time exceeds threshold
            specified in ms (Not available for Starter and Free plans.)
          example: 30000
          type: integer
        integrationids:
          description: "Integration identifiers. For example integrationids:[1,2,3]."
          items:
            type: integer
          type: array
        teamids:
          description: Teams to alert. Comma separated Integers.
          type: string
        custom_message:
          description: Custom message that will be added to email and webhook alerts.
          type: string
      required:
      - host
      - name
      - type
      type: object
    ModifyCheckSettings:
      example:
        integrationids:
        - 6
        - 6
        paused: false
        notifyagainevery: 0
        addtags:
        - addtags
        - addtags
        sendnotificationwhendown: 2
        notifywhenbackup: true
        checkids: "123,456"
        resolution: 5
        responsetime_threshold: 30000
        teamids: teamids
        tags:
        - tags
        - tags
        custom_message: custom_message
        userids: userids
        ipv6: true
        name: mycheck
        host: www.example.com
        probe_filters:
        - probe_filters
        - probe_filters
      oneOf:
      - $ref: '#/components/schemas/HttpAttributesSet'
      - $ref: '#/components/schemas/HttpCustomAttributes'
      - $ref: '#/components/schemas/TcpAttributes'
      - $ref: '#/components/schemas/DnsAttributes'
      - $ref: '#/components/schemas/UdpAttributes'
      - $ref: '#/components/schemas/SmtpAttributesSet'
      - $ref: '#/components/schemas/Pop3Attributes'
      - $ref: '#/components/schemas/ImapAttributes'
      properties:
        name:
          description: Check name
          example: mycheck
          type: string
        host:
          description: Target host
          example: www.example.com
          type: string
        paused:
          default: false
          type: boolean
        resolution:
          default: 5
          description: How often should the check be tested? (minutes)
          enum:
          - 1
          - 5
          - 15
          - 30
          - 60
          example: 5
          type: integer
        userids:
          description: "User identifiers. For example userids=154325,465231,765871"
          type: string
        sendnotificationwhendown:
          default: 2
          description: Send notification when down X times
          example: 2
          type: integer
        notifyagainevery:
          default: 0
          description: Notify again every n result. 0 means that no extra notifications
            will be sent.
          type: integer
        notifywhenbackup:
          default: true
          description: Notify when back up again
          example: true
          type: boolean
        checkids:
          description: "Identifiers of checks to modify in bulk. For example checkids=1234,5678"
          example: "123,456"
          type: string
        tags:
          description: List of tags for check. The maximum length of a tag is 64 characters.
          items:
            type: string
          type: array
        addtags:
          description: Check tags to add in addition to current check tags
          items:
            type: string
          type: array
        probe_filters:
          description: "Filters used for probe selections. Overwrites previous filters\
            \ for check. To remove all filters from a check, use an empty value. Comma\
            \ separated key:value pairs. Currently only region is supported. Possible\
            \ values are 'EU', 'NA', 'APAC' and 'LATAM'. For example, \"region: NA\"\
            ."
          items:
            type: string
          type: array
        ipv6:
          description: "Use ipv6 instead of ipv4, if an IP address is provided as\
            \ host this will be overrided by the IP address version"
          type: boolean
        responsetime_threshold:
          default: 30000
          description: Triggers a down alert if the response time exceeds threshold
            specified in ms (Not available for Starter and Free plans.)
          example: 30000
          type: integer
        integrationids:
          description: "Integration identifiers. For example integrationids:[1,2,3]."
          items:
            type: integer
          type: array
        teamids:
          description: Teams to alert. Comma separated Integers.
          type: string
        custom_message:
          description: Custom message that will be added to email and webhook alerts.
          type: string
      type: object
    credits_resp_attrs:
      example:
        credits:
          usedtransaction: 7
          availablesmstests: 7
          availablesms: 20
          useddefault: 6
          maxrumfilters: 10
          maxrumpageviews: 100000
          autofillsms: false
          autofillsms_amount: 0
          availablerumsites: 4
          autofillsms_when_left: 0
          usedrumsites: 1
          max_sms_overage: 0
          availablechecks: 5
          checklimit: 18
      properties:
        credits:
          $ref: '#/components/schemas/credits_resp_attrs_credits'
    maintenance_id:
      type: integer
    maintenance_limit:
      type: integer
    maintenance_offset:
      type: integer
    maintenance_orderby:
      enum:
      - description
      - from
      - to
      - effectiveto
      type: string
    maintenance_order:
      default: asc
      enum:
      - asc
      - desc
      type: string
    maintenance_resp_attrs:
      example:
        maintenance:
        - effectiveto: 1497574800
          checks:
            tms:
            - 123
            - 111
            uptime:
            - 506206
            - 506233
            - 222
          description: Maintenance window from DB
          from: 1497520800
          id: 1
          to: 1497574800
          repeatevery: 0
          recurrencetype: week
        - effectiveto: 1497574800
          checks:
            tms:
            - 123
            - 111
            uptime:
            - 506206
            - 506233
            - 222
          description: Maintenance window from DB
          from: 1497520800
          id: 1
          to: 1497574800
          repeatevery: 0
          recurrencetype: week
      properties:
        maintenance:
          description: A list of maintenance windows
          items:
            $ref: '#/components/schemas/maintenance_resp_attrs_maintenance_inner'
          type: array
    maintenance_id_resp_attrs:
      example:
        maintenance:
          effectiveto: 1497574800
          checks:
            tms:
            - 123
            - 111
            uptime:
            - 506206
            - 506233
            - 222
          description: Particular maintenance window
          from: 1497520800
          id: 456
          to: 1497574800
          repeatevery: 0
          recurrencetype: none
      properties:
        maintenance:
          $ref: '#/components/schemas/maintenance_id_resp_attrs_maintenance'
    maintenance_post:
      properties:
        description:
          description: Description
          example: New maintenance window.
          type: string
        from:
          description: Initial maintenance window start. Format UNIX time. (Only future
            allowed. Use 1 for the current timestamp.)
          example: 1500471702
          type: integer
        to:
          description: Initial maintenance window end. Format UNIX time. (Only future
            allowed. Use 1 for the current timestamp.)
          example: 1500475302
          type: integer
        recurrencetype:
          default: none
          description: Type of recurrence.
          enum:
          - none
          - day
          - week
          - month
          example: week
          type: string
        repeatevery:
          default: 0
          description: Repeat every n-th day/week/month
          type: integer
        effectiveto:
          description: "Recurrence end. Format UNIX time. Default: equal to `to`.\
            \ (Only future allowed. Use 1 for the current timestamp.)"
          example: 1500475302
          type: integer
        uptimeids:
          description: Identifiers of uptime checks to assign to the maintenance window
            - Comma separated Integers
          example:
          - 1234567
          - 3456789
          items:
            type: integer
          type: array
        tmsids:
          description: Identifiers of transaction checks to assign to the maintenance
            window - Comma separated Integers
          example:
          - 1234567
          - 3456789
          items:
            type: integer
          type: array
      required:
      - description
      - from
      - to
      type: object
    maintenance_post_resp_attrs:
      example:
        maintenance:
          id: 777
      properties:
        maintenance:
          $ref: '#/components/schemas/maintenance_post_resp_attrs_maintenance'
    maintenance_id_put:
      properties:
        description:
          description: Description
          example: Modified maintenance window
          type: string
        from:
          description: Initial maintenance window start. Format UNIX time. (Only future
            allowed. Use 1 for the current timestamp.)
          example: 1500471702
          type: integer
        to:
          description: Initial maintenance window end. Format UNIX time. (Only future
            allowed. Use 1 for the current timestamp.)
          example: 1500475302
          type: integer
        recurrencetype:
          description: Type of recurrence
          enum:
          - none
          - day
          - week
          - month
          example: week
          type: string
        repeatevery:
          default: 0
          description: Repeat every n-th day/week/month
          type: integer
        effectiveto:
          description: "Recurrence end. Format UNIX time. Default: equal to `to`.\
            \ (Only future allowed. Use 1 for the current timestamp.)"
          example: 1500475302
          type: integer
        uptimeids:
          description: Identifiers of uptime checks to assign to the maintenance window
            - Comma separated Integers
          example:
          - 1234567
          - 3456789
          items:
            type: integer
          type: array
        tmsids:
          description: Identifiers of transaction checks to assign to the maintenance
            window - Comma separated Integers
          example:
          - 1234567
          - 3456789
          items:
            type: integer
          type: array
      type: object
    maintenance_id_put_resp_attrs:
      example:
        message: Maintenance window successfully modified!
      properties:
        message:
          description: Modification result description
          example: Maintenance window successfully modified!
          type: string
    maintenance_id_delete_resp_attrs:
      example:
        message: Maintenance window successfully deleted!
      properties:
        message:
          description: Result description
          example: Maintenance window successfully deleted!
          type: string
    maintenance_delete:
      properties:
        maintenanceids:
          description: Comma-separated list of identifiers of maintenance windows
            to be deleted.
          example:
          - 1
          - 2
          - 3
          - 4
          - 5
          items:
            type: integer
          type: array
      required:
      - maintenanceids
      type: object
    maintenance_delete_resp_attrs:
      example:
        message: 5 maintenance windows successfully deleted.
      properties:
        message:
          description: Result description
          example: 5 maintenance windows successfully deleted.
          type: string
    maintenance.occurrences_id:
      type: integer
    maintenance.occurrences_id_put:
      properties:
        from:
          description: Beginning of the maintenance occurrence. Format UNIX time.
            (Only future allowed. Use 1 for the current timestamp.)
          example: 1500471702
          type: integer
        to:
          description: End of the maintenance occurrence. Format UNIX time. (Only
            future allowed. Use 1 for the current timestamp.)
          example: 1500475302
          type: integer
      type: object
    maintenance.occurrences_id_resp_attrs:
      example:
        occurrence:
          maintenanceid: 44
          from: 1501714800
          id: 57
          to: 1501719300
      properties:
        occurrence:
          $ref: '#/components/schemas/maintenance_occurrences_id_resp_attrs_occurrence'
    maintenance.occurrences_maintenanceid:
      type: integer
    maintenance.occurrences_from:
      type: integer
    maintenance.occurrences_to:
      type: integer
    maintenance.occurrences_resp_attrs:
      example:
        occurrences:
        - maintenanceid: 44
          from: 1501628400
          id: 455
          to: 1501632900
        - maintenanceid: 44
          from: 1501628400
          id: 455
          to: 1501632900
      properties:
        occurrences:
          description: A list of maintenance occurrences.
          items:
            $ref: '#/components/schemas/maintenance_occurrences_resp_attrs_occurrences_inner'
          type: array
    maintenance.occurrences_id_put_resp_attrs:
      example:
        message: Occurrence successfully modified!
      properties:
        message:
          description: Modification result description
          example: Occurrence successfully modified!
          type: string
    maintenance.occurrences_id_delete_resp_attrs:
      example:
        message: Occurrence successfully deleted!
      properties:
        message:
          description: Result description
          example: Occurrence successfully deleted!
          type: string
    maintenance.occurrences_delete:
      properties:
        occurrenceids:
          description: Comma-separated list of identifiers of maintenance occurrences
            to delete.
          items:
            type: integer
          type: array
      required:
      - occurrenceids
    maintenance.occurrences_delete_resp_attrs:
      example:
        message: 5 occurrences successfully deleted.
      properties:
        message:
          description: Result description
          example: 5 occurrences successfully deleted.
          type: string
    Probe:
      example:
        country: United States
        hostname: s413.pingdom.com
        countryiso: US
        city: New York
        ipv6: 2001:0db8:85a3:0000:0000:8a2e:0370:7334
        ip: 70.32.40.2
        name: "New York, NY"
        active: true
        id: 2
      properties:
        id:
          example: 2
          type: integer
        country:
          example: United States
          type: string
        city:
          example: New York
          type: string
        name:
          example: "New York, NY"
          type: string
        active:
          description: Is the probe currently active?
          example: true
          type: boolean
        hostname:
          description: DNS name
          example: s413.pingdom.com
          type: string
        ip:
          description: IPv4 address
          example: 70.32.40.2
          type: string
        ipv6:
          description: IPv6 address (not all probes have this)
          example: 2001:0db8:85a3:0000:0000:8a2e:0370:7334
          type: string
        countryiso:
          description: Country ISO code
          example: US
          type: string
      type: object
    Probes:
      example:
        probes:
        - country: United States
          hostname: s413.pingdom.com
          countryiso: US
          city: New York
          ipv6: 2001:0db8:85a3:0000:0000:8a2e:0370:7334
          ip: 70.32.40.2
          name: "New York, NY"
          active: true
          id: 2
        - country: United States
          hostname: s413.pingdom.com
          countryiso: US
          city: New York
          ipv6: 2001:0db8:85a3:0000:0000:8a2e:0370:7334
          ip: 70.32.40.2
          name: "New York, NY"
          active: true
          id: 2
      properties:
        probes:
          items:
            $ref: '#/components/schemas/Probe'
          type: array
      type: object
    Region:
      properties:
        id:
          description: Region identifier
          type: integer
        description:
          description: Region description
          type: string
        countryid:
          description: Corresponding country identifier
          type: integer
        datetimeformatid:
          description: Corresponding datetimeformat identifier
          type: integer
        numberformatid:
          description: Corresponding numberformat identifier
          type: integer
        timezoneid:
          description: Corresponding timezon identifier
          type: integer
      type: object
    Timezone:
      properties:
        id:
          description: Time zone identifier
          type: integer
        description:
          description: Time zone description
          type: string
      type: object
    DateTimeFormat:
      properties:
        id:
          description: Date/time identifier
          type: integer
        description:
          description: Date/time description
          type: string
      type: object
    NumberFormat:
      properties:
        id:
          description: Number format identifier
          type: integer
        description:
          description: Number format description
          type: string
      type: object
    Country:
      example:
        iso: iso
        name: name
        id: 0
      properties:
        id:
          description: Country id
          type: integer
        iso:
          description: Country ISO code
          type: string
        name:
          description: Country name
          type: string
      type: object
    PhoneCode:
      properties:
        countryid:
          description: Country id (Can be mapped against countries.id)
          type: integer
        name:
          description: Country name
          type: string
        phonecode:
          description: Area phone code
          type: string
      type: object
    References:
      example:
        regions:
        - id: 2
          description: United State (Alaska)
        timezones:
        - id: 4
          description: (GMT -9:00) Alaska
        phonecodes:
          countryid: 295
          name: Zimbabwe
          phonecode: 263
          iso: ZW
        countries:
        - iso: iso
          name: name
          id: 0
        - iso: iso
          name: name
          id: 0
        datetimeformats:
        - id: 3
          description: 31/07/2006 14:45:05
        numberformats:
        - id: 5
          description: "123 456 789,00"
      properties:
        regions:
          example:
          - id: 2
            description: United State (Alaska)
          items:
            $ref: '#/components/schemas/Region'
          type: array
        timezones:
          example:
          - id: 4
            description: (GMT -9:00) Alaska
          items:
            $ref: '#/components/schemas/Timezone'
          type: array
        datetimeformats:
          example:
          - id: 3
            description: 31/07/2006 14:45:05
          items:
            $ref: '#/components/schemas/DateTimeFormat'
          type: array
        numberformats:
          example:
          - id: 5
            description: "123 456 789,00"
          items:
            $ref: '#/components/schemas/NumberFormat'
          type: array
        countries:
          items:
            $ref: '#/components/schemas/Country'
          type: array
        phonecodes:
          example:
            countryid: 295
            name: Zimbabwe
            phonecode: 263
            iso: ZW
          items:
            $ref: '#/components/schemas/PhoneCode'
          type: array
      type: object
    results_checkid:
      type: integer
    results_to:
      type: integer
    results_from:
      type: integer
    results_probes:
      description: "Default: all probes"
      type: string
    results_status:
      description: "Default: all statuses"
      type: string
    results_limit:
      default: 1000
      type: integer
    results_offset:
      default: 0
      type: integer
    results_includeanalysis:
      default: false
      type: boolean
    results_maxresponse:
      type: integer
    results_minresponse:
      type: integer
    results_resp_attrs:
      example:
        activeprobes:
        - 33
        - 33
        results:
        - statusdesclong: OK
          probeid: 33
          responsetime: 91
          time: 1294235764
          statusdesc: OK
          status: up
        - statusdesclong: OK
          probeid: 33
          responsetime: 91
          time: 1294235764
          statusdesc: OK
          status: up
      properties:
        results:
          items:
            $ref: '#/components/schemas/results_resp_attrs_results_inner'
          type: array
        activeprobes:
          description: "For your convenience, a list of used probes that produced\
            \ the showed results"
          items:
            description: Probe identifier
            example: 33
            type: number
          type: array
    HTTP:
      properties:
        host:
          description: Target host
          example: pingdom.com
          type: string
        type:
          enum:
          - http
          type: string
        probeid:
          description: Probe identifier
          example: 17
          type: integer
        probe_filters:
          description: "Filters used for probe selections. Comma separated key:value\
            \ pairs. Currently only region is supported. Possible values are 'EU',\
            \ 'NA', 'APAC' and 'LATAM'."
          type: integer
        ipv6:
          description: Use ipv6 instead of ipv4
          type: boolean
        responsetime_threshold:
          default: 30000
          description: Triggers a down alert if the response time exceeds threshold
            specified in ms (Not available for Starter and Free plans.)
          type: integer
        url:
          default: /
          description: (http specific) Target path on server
          type: string
        encryption:
          default: false
          description: (http specific) Connection encryption
          type: boolean
        port:
          default: 80
          description: (http specific) Target port
          type: integer
        auth:
          description: (http specific) Username and password for target HTTP authentication.
          example: auth=user:password
          type: string
        shouldcontain:
          description: (http specific) Target site should contain this string
          type: string
        shouldnotcontain:
          description: (http specific) Target site should NOT contain this string
          type: string
        postdata:
          description: "(http specific) Data that should be posted to the web page,\
            \ for example submission data for a sign-up or login form. The data needs\
            \ to be formatted in the same way as a web browser would send it to the\
            \ web server"
          type: string
        requestheader{X}:
          description: "(http specific) Custom HTTP header name. Replace {X} with\
            \ a number unique for each header argument."
          example: requestheader1=My-Header:CoolValue
          type: string
        verify_certificate:
          default: true
          description: (http specific) Treat target site as down if an invalid/unverifiable
            certificate is found.
          type: boolean
        ssl_down_days_before:
          default: 0
          description: (http specific) Treat the target site as down if a certificate
            expires within the given number of days. This parameter will be ignored
            if `verify_certificate` is set to `false`.
          type: integer
      required:
      - host
      - type
    HTTP-Custom:
      properties:
        host:
          description: Target host
          example: pingdom.com
          type: string
        type:
          enum:
          - httpcustom
          type: string
        probeid:
          description: Probe identifier
          example: 17
          type: integer
        probe_filters:
          description: "Filters used for probe selections. Comma separated key:value\
            \ pairs. Currently only region is supported. Possible values are 'EU',\
            \ 'NA', 'APAC' and 'LATAM'."
          type: integer
        ipv6:
          description: Use ipv6 instead of ipv4
          type: boolean
        responsetime_threshold:
          default: 30000
          description: Triggers a down alert if the response time exceeds threshold
            specified in ms (Not available for Starter and Free plans.)
          type: integer
        url:
          description: (httpcustom specific) Target path to XML file on server
          type: string
        encryption:
          default: false
          description: (httpcustom specific) Connection encryption
          type: boolean
        port:
          default: 80
          description: (httpcustom specific) Target port
          type: integer
        auth:
          description: (httpcustom specific) Username and password for target HTTP
            authentication.
          example: auth=user:password
          type: string
        additionalurls:
          description: (httpcustom specific) ;-separated list of addidional URLs with
            hostname included.
          example: additionalurls=www.mysite.com;www.myothersite.com
          type: string
      required:
      - host
      - type
      - url
    TCP:
      properties:
        host:
          description: Target host
          example: pingdom.com
          type: string
        type:
          enum:
          - tcp
          type: string
        probeid:
          description: Probe identifier
          example: 17
          type: integer
        probe_filters:
          description: "Filters used for probe selections. Comma separated key:value\
            \ pairs. Currently only region is supported. Possible values are 'EU',\
            \ 'NA', 'APAC' and 'LATAM'."
          type: integer
        ipv6:
          description: Use ipv6 instead of ipv4
          type: boolean
        responsetime_threshold:
          default: 30000
          description: Triggers a down alert if the response time exceeds threshold
            specified in ms (Not available for Starter and Free plans.)
          type: integer
        port:
          description: (tcp specific) Target port
          type: integer
        stringtosend:
          description: (tcp specific) String to send
          type: string
        stringtoexpect:
          description: (tcp specific) String to expect in response
          type: string
      required:
      - host
      - port
      - type
    DNS:
      properties:
        host:
          description: Target host
          example: pingdom.com
          type: string
        type:
          enum:
          - dns
          type: string
        probeid:
          description: Probe identifier
          example: 17
          type: integer
        probe_filters:
          description: "Filters used for probe selections. Comma separated key:value\
            \ pairs. Currently only region is supported. Possible values are 'EU',\
            \ 'NA', 'APAC' and 'LATAM'. For example, \"region: NA\"."
          type: integer
        ipv6:
          description: Use ipv6 instead of ipv4
          type: boolean
        responsetime_threshold:
          default: 30000
          description: Triggers a down alert if the response time exceeds threshold
            specified in ms (Not available for Starter and Free plans.)
          type: integer
        expectedip:
          description: (dns specific) Expected ip
          type: string
        nameserver:
          description: (dns specific) Nameserver
          type: string
      required:
      - expectedip
      - host
      - nameserver
      - type
    UDP:
      properties:
        host:
          description: Target host
          example: pingdom.com
          type: string
        type:
          enum:
          - udp
          type: string
        probeid:
          description: Probe identifier
          example: 17
          type: integer
        probe_filters:
          description: "Filters used for probe selections. Comma separated key:value\
            \ pairs. Currently only region is supported. Possible values are 'EU',\
            \ 'NA', 'APAC' and 'LATAM'."
          type: integer
        ipv6:
          description: Use ipv6 instead of ipv4
          type: boolean
        responsetime_threshold:
          default: 30000
          description: Triggers a down alert if the response time exceeds threshold
            specified in ms (Not available for Starter and Free plans.)
          type: integer
        port:
          description: (udp specific) Target port
          type: integer
        stringtosend:
          description: (udp specific) String to send
          type: string
        stringtoexpect:
          description: (udp specific) String to expect in response
          type: string
      required:
      - host
      - port
      - type
    SMTP:
      properties:
        host:
          description: Target host
          example: pingdom.com
          type: string
        type:
          enum:
          - smtp
          type: string
        probeid:
          description: Probe identifier
          example: 17
          type: integer
        probe_filters:
          description: "Filters used for probe selections. Comma separated key:value\
            \ pairs. Currently only region is supported. Possible values are 'EU',\
            \ 'NA', 'APAC' and 'LATAM'."
          type: integer
        ipv6:
          description: Use ipv6 instead of ipv4
          type: boolean
        responsetime_threshold:
          default: 30000
          description: Triggers a down alert if the response time exceeds threshold
            specified in ms (Not available for Starter and Free plans.)
          type: integer
        port:
          default: 25
          description: (smtp specific) Target port
          type: integer
        auth:
          description: (smtp specific) Username and password for target HTTP authentication.
          example: auth=user:password
          type: string
        stringtoexpect:
          description: (smtp specific) String to expect in response
          type: string
        encryption:
          default: false
          description: (smtp specific) Connection encryption
          type: boolean
      required:
      - host
      - type
    POP3:
      properties:
        host:
          description: Target host
          example: pingdom.com
          type: string
        type:
          enum:
          - pop3
          type: string
        probeid:
          description: Probe identifier
          example: 17
          type: integer
        probe_filters:
          description: "Filters used for probe selections. Comma separated key:value\
            \ pairs. Currently only region is supported. Possible values are 'EU',\
            \ 'NA', 'APAC' and 'LATAM'."
          type: integer
        ipv6:
          description: Use ipv6 instead of ipv4
          type: boolean
        responsetime_threshold:
          default: 30000
          description: Triggers a down alert if the response time exceeds threshold
            specified in ms (Not available for Starter and Free plans.)
          type: integer
        port:
          default: 110
          description: (pop3 specific) Target port
          type: integer
        stringtoexpect:
          description: (pop3 specific) String to expect in response
          type: string
        encryption:
          default: false
          description: (pop3 specific) Connection encryption
          type: boolean
      required:
      - host
      - type
    IMAP:
      properties:
        host:
          description: Target host
          example: pingdom.com
          type: string
        type:
          enum:
          - imap
          type: string
        probeid:
          description: Probe identifier
          example: 17
          type: integer
        probe_filters:
          description: "Filters used for probe selections. Comma separated key:value\
            \ pairs. Currently only region is supported. Possible values are 'EU',\
            \ 'NA', 'APAC' and 'LATAM'."
          type: integer
        ipv6:
          description: Use ipv6 instead of ipv4
          type: boolean
        responsetime_threshold:
          default: 30000
          description: Triggers a down alert if the response time exceeds threshold
            specified in ms (Not available for Starter and Free plans.)
          type: integer
        port:
          default: 143
          description: (imap specific) Target port
          type: integer
        stringtoexpect:
          description: (imap specific) String to expect in response
          type: string
        encryption:
          default: false
          description: (imap specific) Connection encryption
          type: boolean
      required:
      - host
      - type
    single_resp:
      example:
        result:
          statusdesclong: OK
          probedesc: "Stockholm, Sweden"
          probeid: 17
          responsetime: 73
          statusdesc: OK
          status: up
      properties:
        result:
          $ref: '#/components/schemas/single_resp_result'
    summary.average_checkid:
      type: integer
    summary.average_from:
      default: 0
      type: integer
    summary.average_to:
      type: integer
    summary.average_probes:
      type: string
    summary.average_includeuptime:
      default: false
      type: boolean
    summary.average_bycountry:
      default: false
      type: boolean
    summary.average_byprobe:
      default: false
      type: boolean
    summary_resp_attrs:
      example:
        summary:
          responsetime:
            avgresponse: 458
            from: 0
            to: 1294245226
          status:
            totalup: 53072286
            totalunknown: 1240401138
            totaldown: 771879
      properties:
        summary:
          $ref: '#/components/schemas/summary_resp_attrs_summary'
    summary.hoursofday_checkid:
      type: integer
    summary.hoursofday_from:
      type: integer
    summary.hoursofday_to:
      type: integer
    summary.hoursofday_probes:
      type: string
    summary.hoursofday_uselocaltime:
      default: false
      type: boolean
    summary.hoursofday_resp_attrs:
      example:
        hoursofday:
        - avgresponse: 299
          hour: 1
        - avgresponse: 299
          hour: 1
      properties:
        hoursofday:
          items:
            $ref: '#/components/schemas/summary_hoursofday_resp_attrs_hoursofday_inner'
          type: array
    summary.outage_checkid:
      type: integer
    summary.outage_from:
      type: integer
    summary.outage_to:
      type: integer
    summary.outage_order:
      default: asc
      enum:
      - asc
      - desc
      type: string
    summary.outage_resp_attrs:
      example:
        summary:
          states:
          - timefrom: 1293143523
            timeto: 1294180263
            status: up
          - timefrom: 1293143523
            timeto: 1294180263
            status: up
      properties:
        summary:
          $ref: '#/components/schemas/summary_outage_resp_attrs_summary'
    summary.performance_checkid:
      type: integer
    summary.performance_from:
      type: integer
    summary.performance_to:
      type: integer
    summary.performance_resolution:
      default: hour
      enum:
      - hour
      - day
      - week
      type: string
    summary.performance_includeuptime:
      default: false
      type: boolean
    summary.performance_probes:
      type: string
    summary.performance_order:
      default: asc
      enum:
      - asc
      - desc
      type: string
    Weeks:
      example:
        weeks:
        - downtime: 0
          avgresponse: 468
          starttime: 1287957600
          unmonitored: 0
          uptime: 608400
        - downtime: 0
          avgresponse: 468
          starttime: 1287957600
          unmonitored: 0
          uptime: 608400
      properties:
        weeks:
          items:
            $ref: '#/components/schemas/summary_performance_results_inner'
          type: array
      type: object
    Days:
      properties:
        days:
          items:
            $ref: '#/components/schemas/summary_performance_results_inner'
          type: array
      type: object
    Hours:
      properties:
        hours:
          items:
            $ref: '#/components/schemas/summary_performance_results_inner'
          type: array
      type: object
    summary.performance_results:
      items:
        $ref: '#/components/schemas/summary_performance_results_inner'
      type: array
    summary.performance_resp_attrs:
      example:
        summary:
          weeks:
          - downtime: 0
            avgresponse: 468
            starttime: 1287957600
            unmonitored: 0
            uptime: 608400
          - downtime: 0
            avgresponse: 468
            starttime: 1287957600
            unmonitored: 0
            uptime: 608400
      properties:
        summary:
          $ref: '#/components/schemas/summary_performance_resp_attrs_summary'
    summary.probes_checkid:
      type: integer
    summary.probes_from:
      type: integer
    summary.probes_to:
      type: integer
    summary.probes_resp_attrs:
      example:
        probes:
        - 43
        - 42
        - 41
        - 40
        - 39
        - 37
        - 36
        - 35
        - 34
        - 33
        - 32
        - 31
        - 30
        - 29
        - 28
        - 27
        - 24
        - 23
        - 22
        - 21
      properties:
        probes:
          example:
          - 43
          - 42
          - 41
          - 40
          - 39
          - 37
          - 36
          - 35
          - 34
          - 33
          - 32
          - 31
          - 30
          - 29
          - 28
          - 27
          - 24
          - 23
          - 22
          - 21
          items:
            description: Probe identifier
            type: integer
          type: array
    Members:
      properties:
        id:
          description: Contact identifier
          type: integer
        name:
          description: The team member’s name
          type: string
        type:
          description: Type defines whether the member is a user (login user) or a
            contact only
          enum:
          - user
          - contact
          type: string
      type: object
    Teams:
      example:
        teams:
        - id: 1
          name: Team Rocket
          members:
          - id: 1
            name: John Doe
            type: user
        - id: 2
          name: The A-Team
          members:
          - id: 2
            name: John 'Hannibal' Smith
            type: user
          - id: 3
            name: Templeton 'Faceman' Peck
            type: contact
      properties:
        teams:
          items:
            $ref: '#/components/schemas/AlertingTeams'
          type: array
    AlertingTeams:
      properties:
        id:
          description: Team identifier
          type: integer
        name:
          description: Team name
          type: string
        members:
          items:
            $ref: '#/components/schemas/Members'
          type: array
      type: object
    Team_ID:
      example:
        team:
          id: 1
          name: Team Rocket
          members:
          - id: 1
            name: John Doe
            type: user
          - id: 4
            name: Sidekick Jimmy
            type: contact
      properties:
        team:
          $ref: '#/components/schemas/AlertingTeam_ID'
    AlertingTeam_ID:
      example:
        id: 1
        name: Team Rocket
        members:
        - id: 1
          name: John Doe
          type: user
        - id: 4
          name: Sidekick Jimmy
          type: contact
      properties:
        id:
          description: Team identifier
          type: integer
        name:
          description: Team name
          type: string
        members:
          items:
            $ref: '#/components/schemas/Members'
          type: array
      type: object
    UpdateTeam:
      example:
        name: Team Rocket
        member_ids:
        - 1
        - 4
      properties:
        name:
          description: Team name
          type: string
        member_ids:
          description: IDs of contacts to be the members of this team
          items:
            format: int64
            type: integer
          type: array
      required:
      - member_ids
      - name
      type: object
    CreateTeam:
      example:
        name: API Team
        member_ids:
        - 12345
        - 54321
      properties:
        name:
          description: Team name
          type: string
        member_ids:
          description: Contact ids
          items:
            type: integer
          type: array
      required:
      - member_ids
      - name
      type: object
    SMSes:
      items:
        $ref: '#/components/schemas/SMSes_inner'
      type: array
    Emails:
      items:
        $ref: '#/components/schemas/Emails_inner'
      type: array
    APNS:
      items:
        $ref: '#/components/schemas/APNS_inner'
      type: array
    AGCM:
      items:
        $ref: '#/components/schemas/AGCM_inner'
      type: array
    ContactTargets:
      properties:
        id:
          description: Contact ID
          type: integer
        name:
          description: Contact name
          type: string
        paused:
          description: Describes whether alerts are paused for this contact
          type: boolean
        type:
          description: Type defines whether this is a user (login user) or a contact
            only
          enum:
          - user
          - contact
          type: string
        owner:
          description: Indicates whether the contact is the owner of the organization
          type: boolean
        notification_targets:
          $ref: '#/components/schemas/ContactTargets_notification_targets'
        teams:
          items:
            $ref: '#/components/schemas/ContactTargets_teams_inner'
          type: array
      type: object
    Contact:
      example:
        contact:
          id: 123456
          name: John Doe
          paused: false
          type: user
          owner: true
          notification_targets:
            email:
            - severity: HIGH
              address: johndoe@teamrocket.com
            sms:
            - severity: HIGH
              country_code: "00"
              number: "111111111"
              provider: provider's name
          teams:
          - id: 123456
            name: The Dream Team
      properties:
        contact:
          $ref: '#/components/schemas/ContactTargets'
    CreateContact:
      example:
        name: John Doe
        notification_targets:
          email:
          - severity: HIGH
            address: johndoe@teamrocket.com
          sms:
          - severity: HIGH
            country_code: "93"
            number: "111111111"
            provider: provider's name
      properties:
        name:
          description: Contact name
          type: string
        paused:
          default: false
          description: Pause contact
          type: boolean
        notification_targets:
          $ref: '#/components/schemas/CreateContact_notification_targets'
      required:
      - name
      - notification_targets
      type: object
    ContactsList:
      example:
        contacts:
        - id: 1
          name: John Doe
          paused: false
          type: user
          owner: true
          notification_targets:
            email:
            - severity: HIGH
              address: johndoe@teamrocket.com
            sms:
            - severity: HIGH
              country_code: "00"
              number: "111111111"
              provider: provider's name
          teams:
          - id: 123456
            name: The Dream Team
        - id: 2
          name: John "Hannibal" Smith
          paused: true
          type: user
          notification_targets:
            email:
            - severity: HIGH
              address: hannibal@ateam.org
            sms:
            - severity: HIGH
              country_code: "00"
              number: "222222222"
              provider: provider's name
          teams: []
      properties:
        contacts:
          description: List of all contacts targets
          items:
            $ref: '#/components/schemas/ContactTargets'
          type: array
    UpdateContact:
      example:
        name: John Doe
        paused: false
        notification_targets:
          email:
          - severity: HIGH
            address: johndoe@teamrocket.com
          sms:
          - severity: HIGH
            country_code: "93"
            number: "111111111"
            provider: provider's name
      properties:
        name:
          description: Contact name
          type: string
        paused:
          description: Pause contact
          type: boolean
        notification_targets:
          $ref: '#/components/schemas/CreateContact_notification_targets'
      required:
      - name
      - notification_targets
      - paused
      type: object
    Traceroute:
      example:
        traceroute:
          result: "traceroute to pingdom.com (83.140.19.136), 30 hops max, 40 byte\
            \ packets ..."
          probeid: 23
          probedescription: "Dallas 4, TX"
      properties:
        traceroute:
          $ref: '#/components/schemas/TracerouteData'
      type: object
    TracerouteData:
      example:
        result: "traceroute to pingdom.com (83.140.19.136), 30 hops max, 40 byte packets\
          \ ..."
        probeid: 23
        probedescription: "Dallas 4, TX"
      properties:
        result:
          description: Traceroute output
          example: "traceroute to pingdom.com (83.140.19.136), 30 hops max, 40 byte\
            \ packets ..."
          type: string
        probeid:
          description: Probe identifier
          example: 23
          type: integer
        probedescription:
          description: Probe description
          example: "Dallas 4, TX"
          type: string
      type: object
    CheckGeneral:
      example:
        last_downtime_start: 1553081100
        name: My awesome check
        active: true
        created_at: 1553070682
        interval: 10
        id: 3
        modified_at: 1553070968
        region: us-west
        type: "[\"script\"]"
        last_downtime_end: 1553089000
        status: successful
        tags:
        - tag1
        - tag2
      properties:
        active:
          description: "Check status: active or inactive"
          example: true
          type: boolean
          x-go-name: Active
        created_at:
          description: Timestamp when the check was created
          example: 1553070682
          format: int64
          type: integer
          x-go-name: CreatedAt
        id:
          description: Id of the check
          example: 3
          format: int64
          type: integer
          x-go-name: CheckID
        interval:
          description: "TMS test intervals in minutes. Allowed intervals: 5,10,20,60,720,1440.\
            \ The interval you're allowed to set may vary depending on your current\
            \ plan."
          example: 10
          format: int64
          type: integer
          x-go-name: Interval
        modified_at:
          description: Timestamp when the check was modified
          example: 1553070968
          format: int64
          type: integer
          x-go-name: ModifiedAt
        last_downtime_start:
          description: Timestamp when the last downtime started. This field is optional
          example: 1553081100
          format: int64
          type: integer
          x-go-name: LastDowntimeStart
        last_downtime_end:
          description: Timestamp when the last downtime ended. This field is optional
          example: 1553089000
          format: int64
          type: integer
          x-go-name: LastDowntimeEnd
        name:
          description: Name of the check
          example: My awesome check
          type: string
          x-go-name: Name
        region:
          description: "Name of the region where the check is executed. Supported\
            \ regions: us-east, us-west, eu, au"
          example: us-west
          type: string
          x-go-name: Region
        status:
          description: "Whether the check is passing or failing at the moment (successful,\
            \ failing, unknown)"
          example: successful
          type: string
          x-go-name: Status
        tags:
          description: "List of tags for a check. The tag name may contain the characters\
            \ 'A-Z', 'a-z', '0-9', '_' and '-'. The maximum length of a tag is 64\
            \ characters."
          example:
          - tag1
          - tag2
          items:
            type: string
          type: array
        type:
          description: "Type of transaction check: \"script\" for regular TMS checks\
            \ and \"recording\" for checks made using the Transaction Recorder"
          enum:
          - script
          - recording
          example: "[\"script\"]"
          type: string
      type: object
      x-go-package: github.com/pingdom/tms-api/internal/models
    CheckSimple:
      example:
        name: My awesome check
        id: 3
      properties:
        id:
          description: Id of the check
          example: 3
          format: int64
          type: integer
          x-go-name: CheckID
        name:
          description: Name of the check
          example: My awesome check
          type: string
          x-go-name: Name
      type: object
      x-go-package: github.com/pingdom/tms-api/internal/models
    CheckWithoutID:
      description: CheckWithoutID is a struct describing a TMS check data common for
        creating a check
      example:
        metadata:
          disableWebSecurity: true
          width: 1950
          height: 1080
          authentications:
            httpAuthentications:
            - credentials:
                password: secret
                userName: admin
              host: https://example.com/auth
            - credentials:
                password: secret
                userName: admin
              host: https://example.com/auth
        send_notification_when_down: 0
        team_ids:
        - 12345678
        - 135790
        active: false
        severity_level: low
        contact_ids:
        - 12345678
        - 19876654
        steps:
        - args:
            input: input
            password: password
            seconds: seconds
            select: select
            form: form
            checkbox: checkbox
            value: value
            url: http://www.google.com
            element: element
            option: option
            radio: radio
            username: username
          fn: go_to
        - args:
            input: input
            password: password
            seconds: seconds
            select: select
            form: form
            checkbox: checkbox
            value: value
            url: http://www.google.com
            element: element
            option: option
            radio: radio
            username: username
          fn: go_to
        integration_ids:
        - 1234
        - 1359
        tags:
        - tag1
        - tag2
        custom_message: My custom message
        name: My awesome check
        interval: 20
        region: us-west
      properties:
        active:
          default: true
          description: "Check status: active or inactive"
          example: false
          type: boolean
          x-go-name: Active
        contact_ids:
          description: Contacts to alert
          example:
          - 12345678
          - 19876654
          items:
            format: int64
            type: integer
          type: array
          x-go-name: ContactIDs
        custom_message:
          description: Custom message that is part of the email and webhook alerts
          example: My custom message
          type: string
          x-go-name: CustomMessage
        interval:
          default: 10
          description: "TMS test intervals in minutes. Allowed intervals: 5,10,20,60,720,1440.\
            \ The interval you're allowed to set may vary depending on your current\
            \ plan."
          example: 20
          format: int64
          type: integer
          x-go-name: Interval
        name:
          description: Name of the check
          example: My awesome check
          type: string
          x-go-name: Name
        region:
          default: us-east
          description: "Name of the region where the check is executed. Supported\
            \ regions: us-east, us-west, eu, au"
          example: us-west
          type: string
          x-go-name: Region
        send_notification_when_down:
          default: 1
          description: Send notification when down X times
          example: 0
          format: int64
          type: integer
          x-go-name: NotifyAfter
        severity_level:
          default: high
          description: "Check importance- how important are the alerts when the check\
            \ fails. Allowed values: low, high"
          example: low
          type: string
          x-go-name: SeverityLevel
        steps:
          description: steps to be executed as part of the check
          items:
            $ref: '#/components/schemas/Step'
          type: array
          x-go-name: Steps
        team_ids:
          description: Teams to alert
          example:
          - 12345678
          - 135790
          items:
            format: int64
            type: integer
          type: array
          x-go-name: TeamIDs
        integration_ids:
          description: Integration identifiers.
          example:
          - 1234
          - 1359
          items:
            format: int64
            type: integer
          type: array
          x-go-name: IntegrationIDs
        metadata:
          $ref: '#/components/schemas/Metadata'
        tags:
          description: "List of tags for a check. The tag name may contain the characters\
            \ 'A-Z', 'a-z', '0-9', '_' and '-'. The maximum length of a tag is 64\
            \ characters."
          example:
          - tag1
          - tag2
          items:
            type: string
          type: array
      required:
      - name
      - steps
      type: object
      x-go-package: github.com/pingdom/tms-api/internal/models
    CheckWithoutIDPUT:
      description: CheckWithoutIDPUT is a struct describing a TMS check data common
        for updating a check
      example:
        metadata:
          disableWebSecurity: true
          width: 1950
          height: 1080
          authentications:
            httpAuthentications:
            - credentials:
                password: secret
                userName: admin
              host: https://example.com/auth
            - credentials:
                password: secret
                userName: admin
              host: https://example.com/auth
        send_notification_when_down: 1
        team_ids:
        - 12345678
        - 135790
        active: true
        severity_level: low
        contact_ids:
        - 12345678
        - 19876654
        steps:
        - args:
            input: input
            password: password
            seconds: seconds
            select: select
            form: form
            checkbox: checkbox
            value: value
            url: http://www.google.com
            element: element
            option: option
            radio: radio
            username: username
          fn: go_to
        - args:
            input: input
            password: password
            seconds: seconds
            select: select
            form: form
            checkbox: checkbox
            value: value
            url: http://www.google.com
            element: element
            option: option
            radio: radio
            username: username
          fn: go_to
        tags:
        - tag1
        - tag2
        integration_ids:
        - 12345
        - 98765
        custom_message: My custom message
        name: My awesome check
        interval: 10
        region: us-west
      properties:
        active:
          description: "Check status: active or inactive"
          example: true
          type: boolean
          x-go-name: Active
        contact_ids:
          description: Contacts to alert
          example:
          - 12345678
          - 19876654
          items:
            format: int64
            type: integer
          type: array
          x-go-name: ContactIDs
        custom_message:
          description: Custom message that is part of the email and webhook alerts
          example: My custom message
          type: string
          x-go-name: CustomMessage
        interval:
          description: "TMS test intervals in minutes. Allowed intervals: 5,10,20,60,720,1440.\
            \ The interval you're allowed to set may vary depending on your current\
            \ plan."
          example: 10
          format: int64
          type: integer
          x-go-name: Interval
        name:
          description: Name of the check
          example: My awesome check
          type: string
          x-go-name: Name
        region:
          description: "Name of the region where the check is executed. Supported\
            \ regions: us-east, us-west, eu, au"
          example: us-west
          type: string
          x-go-name: Region
        send_notification_when_down:
          description: Send notification when down X times
          example: 1
          format: int64
          type: integer
          x-go-name: NotifyAfter
        severity_level:
          description: "Check importance- how important are the alerts when the check\
            \ fails. Allowed values: low, high"
          example: low
          type: string
          x-go-name: SeverityLevel
        steps:
          description: steps to be executed as part of the check
          items:
            $ref: '#/components/schemas/Step'
          type: array
          x-go-name: Steps
        team_ids:
          description: Teams to alert
          example:
          - 12345678
          - 135790
          items:
            format: int64
            type: integer
          type: array
          x-go-name: TeamIDs
        metadata:
          $ref: '#/components/schemas/Metadata'
        tags:
          description: "List of tags for a check. The tag name may contain the characters\
            \ 'A-Z', 'a-z', '0-9', '_' and '-'. The maximum length of a tag is 64\
            \ characters."
          example:
          - tag1
          - tag2
          items:
            type: string
          type: array
        integration_ids:
          description: Integration identifiers as a list of integers.
          example:
          - 12345
          - 98765
          items:
            type: integer
          type: array
      type: object
      x-go-package: github.com/pingdom/tms-api/internal/models
    CheckWithoutIDGET:
      description: CheckWithoutIDGET is a struct describing a TMS check data common
        for displaying a check
      example:
        metadata:
          disableWebSecurity: true
          width: 1950
          height: 1080
          authentications:
            httpAuthentications:
            - credentials:
                password: secret
                userName: admin
              host: https://example.com/auth
            - credentials:
                password: secret
                userName: admin
              host: https://example.com/auth
        send_notification_when_down: 1
        team_ids:
        - 12345678
        - 135790
        last_downtime_start: 1553081100
        active: true
        created_at: 1553070682
        severity_level: low
        type: "[\"script\"]"
        contact_ids:
        - 12345678
        - 19876654
        steps:
        - args:
            input: input
            password: password
            seconds: seconds
            select: select
            form: form
            checkbox: checkbox
            value: value
            url: http://www.google.com
            element: element
            option: option
            radio: radio
            username: username
          fn: go_to
        - args:
            input: input
            password: password
            seconds: seconds
            select: select
            form: form
            checkbox: checkbox
            value: value
            url: http://www.google.com
            element: element
            option: option
            radio: radio
            username: username
          fn: go_to
        integration_ids:
        - 1234
        - 1359
        tags:
        - tag1
        - tag2
        custom_message: My custom message
        name: My awesome check
        interval: 10
        modified_at: 1553070968
        region: us-west
        last_downtime_end: 1553089000
        status: successful
      properties:
        active:
          description: Check status - active or inactive
          example: true
          type: boolean
          x-go-name: Active
        contact_ids:
          description: Contacts to alert
          example:
          - 12345678
          - 19876654
          items:
            format: int64
            type: integer
          type: array
          x-go-name: ContactIDs
        created_at:
          description: Timestamp when the check was created
          example: 1553070682
          format: int64
          type: integer
          x-go-name: CreatedAt
        modified_at:
          description: Timestamp when the check was modified
          example: 1553070968
          format: int64
          type: integer
          x-go-name: ModifiedAt
        last_downtime_start:
          description: Timestamp when the last downtime started. This field is optional
          example: 1553081100
          format: int64
          type: integer
          x-go-name: LastDowntimeStart
        last_downtime_end:
          description: Timestamp when the last downtime ended. This field is optional
          example: 1553089000
          format: int64
          type: integer
          x-go-name: LastDowntimeEnd
        custom_message:
          description: Custom message that is part of the email and webhook alerts
          example: My custom message
          type: string
          x-go-name: CustomMessage
        interval:
          description: "TMS test intervals in minutes. Allowed intervals: 5,10,20,60,720,1440.\
            \ The interval you're allowed to set may vary depending on your current\
            \ plan."
          example: 10
          format: int64
          type: integer
          x-go-name: Interval
        name:
          description: Name of the check
          example: My awesome check
          type: string
          x-go-name: Name
        region:
          description: "Name of the region where the check is executed. Supported\
            \ regions: us-east, us-west, eu, au"
          example: us-west
          type: string
          x-go-name: Region
        send_notification_when_down:
          description: Send notification when down X times
          example: 1
          format: int64
          type: integer
          x-go-name: NotifyAfter
        severity_level:
          description: "Check importance- how important are the alerts when the check\
            \ fails. Allowed values: low, high"
          example: low
          type: string
          x-go-name: SeverityLevel
        status:
          description: "Whether the check is passing or failing at the moment (successful,\
            \ failing, unknown)"
          example: successful
          type: string
          x-go-name: Status
        steps:
          description: steps to be executed as part of the check
          items:
            $ref: '#/components/schemas/Step'
          type: array
          x-go-name: Steps
        team_ids:
          description: Teams to alert
          example:
          - 12345678
          - 135790
          items:
            format: int64
            type: integer
          type: array
          x-go-name: TeamIDs
        integration_ids:
          description: Integration identifiers.
          example:
          - 1234
          - 1359
          items:
            format: int64
            type: integer
          type: array
          x-go-name: IntegrationIDs
        metadata:
          $ref: '#/components/schemas/MetadataGET'
        tags:
          description: "List of tags for a check. The tag name may contain the characters\
            \ 'A-Z', 'a-z', '0-9', '_' and '-'. The maximum length of a tag is 64\
            \ characters."
          example:
          - tag1
          - tag2
          items:
            type: string
          type: array
        type:
          description: "Type of transaction check: \"script\" for regular TMS checks\
            \ and \"recording\" for checks made using the Transaction Recorder"
          enum:
          - script
          - recording
          example: "[\"script\"]"
          type: string
      type: object
    ChecksAll:
      example:
        checks:
        - last_downtime_start: 1553081100
          name: My awesome check
          active: true
          created_at: 1553070682
          interval: 10
          id: 3
          modified_at: 1553070968
          region: us-west
          type: "[\"script\"]"
          last_downtime_end: 1553089000
          status: successful
          tags:
          - tag1
          - tag2
        - last_downtime_start: 1553081100
          name: My awesome check
          active: true
          created_at: 1553070682
          interval: 10
          id: 3
          modified_at: 1553070968
          region: us-west
          type: "[\"script\"]"
          last_downtime_end: 1553089000
          status: successful
          tags:
          - tag1
          - tag2
        offset: 0
        limit: 1000
      properties:
        checks:
          items:
            $ref: '#/components/schemas/CheckGeneral'
          type: array
          x-go-name: Check
        limit:
          example: 1000
          format: uint64
          type: integer
          x-go-name: Limit
        offset:
          example: 0
          format: uint64
          type: integer
          x-go-name: Offset
      type: object
    Step:
      description: Step is a struct describing a single step of a TMS check
      example:
        args:
          input: input
          password: password
          seconds: seconds
          select: select
          form: form
          checkbox: checkbox
          value: value
          url: http://www.google.com
          element: element
          option: option
          radio: radio
          username: username
        fn: go_to
      properties:
        args:
          $ref: '#/components/schemas/Step_args'
        fn:
          description: Operation to be done
          example: go_to
          type: string
          x-go-name: Function
      type: object
    HttpAuthentications:
      example:
        credentials:
          password: secret
          userName: admin
        host: https://example.com/auth
      properties:
        credentials:
          $ref: '#/components/schemas/HttpAuthentications_credentials'
        host:
          example: https://example.com/auth
          type: string
          x-go-name: Host
    MetadataGET:
      description: Recording related metadata. Used for recordings only. Modify with
        caution!
      example:
        disableWebSecurity: true
        width: 1950
        height: 1080
        authentications:
          httpAuthentications:
          - credentials:
              password: secret
              userName: admin
            host: https://example.com/auth
          - credentials:
              password: secret
              userName: admin
            host: https://example.com/auth
      properties:
        width:
          description: Width of the browser window
          example: 1950
          type: integer
          x-go-name: Width
        height:
          description: Height of the browser window
          example: 1080
          type: integer
          x-go-name: Height
        disableWebSecurity:
          description: Setting this field to false will disable the same-origin policy
            during check execution
          type: boolean
          x-go-name: DisableWebSecurity
        authentications:
          $ref: '#/components/schemas/MetadataGET_authentications'
      type: object
    Metadata:
      description: Recording related metadata. Used for recordings only. Modify with
        caution!
      example:
        disableWebSecurity: true
        width: 1950
        height: 1080
        authentications:
          httpAuthentications:
          - credentials:
              password: secret
              userName: admin
            host: https://example.com/auth
          - credentials:
              password: secret
              userName: admin
            host: https://example.com/auth
      properties:
        width:
          description: Width of the browser window
          example: 1950
          type: integer
          x-go-name: Width
        height:
          description: Height of the browser window
          example: 1080
          type: integer
          x-go-name: Height
        disableWebSecurity:
          description: Setting this field to false will disable the same-origin policy
            during check execution
          type: boolean
          x-go-name: DisableWebSecurity
        authentications:
          $ref: '#/components/schemas/MetadataGET_authentications'
      required:
      - authentications
      - disableWebSecurity
      - height
      - width
      type: object
    State:
      example:
        error_in_step: 2
        from: 2020-07-10T10:51:55Z
        to: 2020-07-14T07:25:15Z
        message: URL should be 'http://www.example12345.com/' but is 'http://www.example.com/'.
        status: down
      properties:
        status:
          description: Interval status
          enum:
          - up
          - down
          - unknown
          example: down
          type: string
        from:
          description: Interval start. The format is `RFC 3339`
          example: 2020-07-10T10:51:55Z
          format: date-time
          type: string
        to:
          description: Interval end. The format is `RFC 3339`
          example: 2020-07-14T07:25:15Z
          format: date-time
          type: string
        error_in_step:
          description: Number of step in which an error has occured (only if `status`
            is `down`)
          example: 2
          type: integer
        message:
          description: Error message for the step that is failing (only if `status`
            is `down`)
          example: URL should be 'http://www.example12345.com/' but is 'http://www.example.com/'.
          type: string
      type: object
    CheckStatus:
      example:
        name: My awesome check
        check_id: 123
        states:
        - error_in_step: 2
          from: 2020-07-10T10:51:55Z
          to: 2020-07-14T07:25:15Z
          message: URL should be 'http://www.example12345.com/' but is 'http://www.example.com/'.
          status: down
        - error_in_step: 2
          from: 2020-07-10T10:51:55Z
          to: 2020-07-14T07:25:15Z
          message: URL should be 'http://www.example12345.com/' but is 'http://www.example.com/'.
          status: down
      properties:
        check_id:
          description: ID of the check
          example: 123
          format: int64
          type: integer
        name:
          description: Name of the check
          example: My awesome check
          type: string
        states:
          description: Intervals when the check had a specific status (`up`/`down`).
          items:
            $ref: '#/components/schemas/State'
          type: array
      type: object
      x-go-name: CustomCheckStatus
    ReportStatusSingle:
      example:
        report:
          name: My awesome check
          check_id: 123
          states:
          - error_in_step: 2
            from: 2020-07-10T10:51:55Z
            to: 2020-07-14T07:25:15Z
            message: URL should be 'http://www.example12345.com/' but is 'http://www.example.com/'.
            status: down
          - error_in_step: 2
            from: 2020-07-10T10:51:55Z
            to: 2020-07-14T07:25:15Z
            message: URL should be 'http://www.example12345.com/' but is 'http://www.example.com/'.
            status: down
      properties:
        report:
          $ref: '#/components/schemas/CheckStatus'
      type: object
    ReportStatusAll:
      example:
        report:
        - name: My awesome check
          check_id: 123
          states:
          - error_in_step: 2
            from: 2020-07-10T10:51:55Z
            to: 2020-07-14T07:25:15Z
            message: URL should be 'http://www.example12345.com/' but is 'http://www.example.com/'.
            status: down
          - error_in_step: 2
            from: 2020-07-10T10:51:55Z
            to: 2020-07-14T07:25:15Z
            message: URL should be 'http://www.example12345.com/' but is 'http://www.example.com/'.
            status: down
        - name: My awesome check
          check_id: 123
          states:
          - error_in_step: 2
            from: 2020-07-10T10:51:55Z
            to: 2020-07-14T07:25:15Z
            message: URL should be 'http://www.example12345.com/' but is 'http://www.example.com/'.
            status: down
          - error_in_step: 2
            from: 2020-07-10T10:51:55Z
            to: 2020-07-14T07:25:15Z
            message: URL should be 'http://www.example12345.com/' but is 'http://www.example.com/'.
            status: down
      properties:
        report:
          items:
            $ref: '#/components/schemas/CheckStatus'
          type: array
      type: object
    AverageResponse:
      description: Average response times in milliseconds
      example: 123
      format: int64
      type: integer
    Downtime:
      description: Amount of time when the check was down within given interval (only
        with the `include_uptime` flag)
      example: 10
      format: int64
      type: integer
    Uptime:
      description: Amount of time when the check was up within given interval (only
        with the `include_uptime` flag)
      example: 230
      format: int64
      type: integer
    Unmonitored:
      description: Amount of time when there is no specific data about check status
        (up/down) within given interval (only with the `include_uptime` flag)
      example: 50
      format: int64
      type: integer
    PropertyFrom:
      description: Interval start. The format is `RFC 3339`
      example: 2020-07-10T10:51:55Z
      format: date-time
      type: string
    PropertyCheckID:
      description: ID of the check
      example: 123
      format: int64
      type: integer
    PropertyCheckName:
      description: Name of the check
      example: My awesome check
      type: string
    ReportPerformance:
      example:
        report:
          intervals:
          - downtime: 10
            average_response: 123
            from: 2020-07-10T10:51:55Z
            unmonitored: 50
            steps:
            - average_response: 123
              step:
                args:
                  input: input
                  password: password
                  seconds: seconds
                  select: select
                  form: form
                  checkbox: checkbox
                  value: value
                  url: http://www.google.com
                  element: element
                  option: option
                  radio: radio
                  username: username
                fn: go_to
            - average_response: 123
              step:
                args:
                  input: input
                  password: password
                  seconds: seconds
                  select: select
                  form: form
                  checkbox: checkbox
                  value: value
                  url: http://www.google.com
                  element: element
                  option: option
                  radio: radio
                  username: username
                fn: go_to
            uptime: 230
          - downtime: 10
            average_response: 123
            from: 2020-07-10T10:51:55Z
            unmonitored: 50
            steps:
            - average_response: 123
              step:
                args:
                  input: input
                  password: password
                  seconds: seconds
                  select: select
                  form: form
                  checkbox: checkbox
                  value: value
                  url: http://www.google.com
                  element: element
                  option: option
                  radio: radio
                  username: username
                fn: go_to
            - average_response: 123
              step:
                args:
                  input: input
                  password: password
                  seconds: seconds
                  select: select
                  form: form
                  checkbox: checkbox
                  value: value
                  url: http://www.google.com
                  element: element
                  option: option
                  radio: radio
                  username: username
                fn: go_to
            uptime: 230
          name: My awesome check
          check_id: 123
          resolution: day
      properties:
        report:
          $ref: '#/components/schemas/ReportPerformance_report'
      type: object
    _checks_put_request:
      properties:
        paused:
          description: "Use value: true to pause the check(s) and value: false to\
            \ unpause it(them)."
          type: boolean
        resolution:
          enum:
          - 1
          - 5
          - 15
          - 30
          - 60
          type: integer
        checkids:
          description: |
            Comma-separated list of identifiers for checks to be modified. Invalid check identifiers will be ignored. Default: all checks
          type: string
      type: object
    _checks_put_200_response:
      example:
        message: Modification of 4 checks was successful!
      properties:
        message:
          example: Modification of 4 checks was successful!
          type: string
      type: object
    _checks_post_200_response_check:
      example:
        name: My new HTTP check
        id: 138631
      properties:
        id:
          description: Created check ID.
          example: 138631
          type: integer
        name:
          description: Created check name.
          example: My new HTTP check
          type: string
      type: object
    _checks_post_200_response:
      example:
        check:
          name: My new HTTP check
          id: 138631
      properties:
        check:
          $ref: '#/components/schemas/_checks_post_200_response_check'
      type: object
    _checks_delete_200_response:
      example:
        message: Deletion of checks was successful!
      properties:
        message:
          example: Deletion of checks was successful!
          type: string
      type: object
    _checks__checkid__put_200_response:
      example:
        message: Modification of check was successful!
      properties:
        message:
          example: Modification of check was successful!
          type: string
      type: object
    _checks__checkid__delete_200_response:
      example:
        message: Deletion of check was successful!
      properties:
        message:
          example: Deletion of check was successful!
          type: string
      type: object
    _single_get_Query_Parameters_parameter:
      oneOf:
      - $ref: '#/components/schemas/HTTP'
      - $ref: '#/components/schemas/HTTP-Custom'
      - $ref: '#/components/schemas/TCP'
      - $ref: '#/components/schemas/DNS'
      - $ref: '#/components/schemas/UDP'
      - $ref: '#/components/schemas/SMTP'
      - $ref: '#/components/schemas/POP3'
      - $ref: '#/components/schemas/IMAP'
    _alerting_teams_post_200_response_team:
      example:
        id: "12345678"
      properties:
        id:
          description: ID of the created team
          example: "12345678"
          type: string
      type: object
    _alerting_teams_post_200_response:
      example:
        team:
          id: "12345678"
      properties:
        team:
          $ref: '#/components/schemas/_alerting_teams_post_200_response_team'
      type: object
    _alerting_teams__teamid__delete_200_response:
      example:
        message: Deletion of team 12345 was successful.
      properties:
        message:
          example: Deletion of team 12345 was successful.
          type: string
      type: object
    _alerting_contacts_post_200_response_contact:
      example:
        id: "12345678"
      properties:
        id:
          description: ID of the created contact
          example: "12345678"
          type: string
      type: object
    _alerting_contacts_post_200_response:
      example:
        contact:
          id: "12345678"
      properties:
        contact:
          $ref: '#/components/schemas/_alerting_contacts_post_200_response_contact'
      type: object
    _alerting_contacts__contactid__delete_200_response:
      example:
        message: Deletion of contact 12345 was successful
      properties:
        message:
          example: Deletion of contact 12345 was successful
          type: string
      type: object
    deleteCheck_200_response:
      example:
        message: Deletion of check 1234567 was successful
      properties:
        message:
          example: Deletion of check 1234567 was successful
          type: string
      type: object
    actions_alerts_entry_actions_alerts_inner:
      example:
        sentto: 46-555555
        messageshort: up
        time: "1292248276"
        messagefull: "PingdomAlert UP: MyCheck (example.com) is UP again at 2010-12-13\
          \ 14:50:54. Downtime: 12m."
        userid: "111250"
        checkid: "241688"
        charged: "true"
        username: John Doe
        via: sms
        status: delivered
      properties:
        username:
          description: Name of alerted user
          example: John Doe
          type: string
        userid:
          description: Identifier of alerted user
          example: "111250"
          type: string
        checkid:
          description: Identifier of alerted user
          example: "241688"
          type: string
        time:
          description: Time of alert generation. Format UNIX time
          example: "1292248276"
          type: string
        via:
          description: "Alert medium. apns - iphone, agcm - android"
          enum:
          - email
          - sms
          - twitter
          - apns
          - agcm
          example: sms
          type: string
        status:
          description: Alert status
          enum:
          - sent
          - delivered
          - error
          - notdelivered
          - nocredits
          example: delivered
          type: string
        messageshort:
          description: Short description of message
          example: up
          type: string
        messagefull:
          description: Full message body
          example: "PingdomAlert UP: MyCheck (example.com) is UP again at 2010-12-13\
            \ 14:50:54. Downtime: 12m."
          type: string
        sentto:
          description: "Target address, phone number etc"
          example: 46-555555
          type: string
        charged:
          description: True if your account was charged for this message
          example: "true"
          type: string
      type: object
    actions_alerts_entry_actions:
      example:
        alerts:
        - sentto: 46-555555
          messageshort: up
          time: "1292248276"
          messagefull: "PingdomAlert UP: MyCheck (example.com) is UP again at 2010-12-13\
            \ 14:50:54. Downtime: 12m."
          userid: "111250"
          checkid: "241688"
          charged: "true"
          username: John Doe
          via: sms
          status: delivered
        - sentto: 46-555555
          messageshort: up
          time: "1292248276"
          messagefull: "PingdomAlert UP: MyCheck (example.com) is UP again at 2010-12-13\
            \ 14:50:54. Downtime: 12m."
          userid: "111250"
          checkid: "241688"
          charged: "true"
          username: John Doe
          via: sms
          status: delivered
      properties:
        alerts:
          description: Alert entry
          items:
            $ref: '#/components/schemas/actions_alerts_entry_actions_alerts_inner'
          type: array
      type: object
    analysis_resp_attrs_analysis_inner:
      example:
        timefirsttest: 1290441826
        id: 28739021
        timeconfirmtest: 1290441865
      properties:
        id:
          description: Analysis id
          example: 28739021
          type: integer
        timefirsttest:
          description: Time of test that initiated the confirmation test
          example: 1290441826
          type: integer
        timeconfirmtest:
          description: Time of the confirmation test that performed the error analysis
          example: 1290441865
          type: integer
      type: object
    DetailedHttpAttributes_type:
      example:
        http:
          password: e4gh51!
          username: User
      properties:
        http:
          $ref: '#/components/schemas/HttpAttributesGet'
      type: object
    DetailedHttpCustomAttributes_type:
      properties:
        httpcustom:
          $ref: '#/components/schemas/HttpCustomAttributes'
      type: object
    DetailedTcpAttributes_type:
      properties:
        tcp:
          $ref: '#/components/schemas/TcpAttributes'
      type: object
    DetailedDnsAttributes_type:
      properties:
        dns:
          $ref: '#/components/schemas/DnsAttributes'
      type: object
    DetailedUdpAttributes_type:
      properties:
        udp:
          $ref: '#/components/schemas/UdpAttributes'
      type: object
    DetailedSmtpAttributes_type:
      properties:
        smtp:
          $ref: '#/components/schemas/SmtpAttributesGet'
      type: object
    DetailedPop3Attributes_type:
      properties:
        pop3:
          $ref: '#/components/schemas/Pop3Attributes'
      type: object
    DetailedImapAttributes_type:
      properties:
        imap:
          $ref: '#/components/schemas/ImapAttributes'
      type: object
    DetailedCheckHttp_check:
      allOf:
      - $ref: '#/components/schemas/DetailedHttpAttributes'
      - $ref: '#/components/schemas/DetailedCheckAttributes'
      example:
        integrationids:
        - 74356
        - 74358
        notifyagainevery: 5
        custom_message: Important check is down!
        sendnotificationwhendown: 6
        notifywhenbackup: true
        probe_filters:
        - "region: EU"
        type:
          http:
            password: e4gh51!
            username: User
        responsetime_threshold: false
      type: object
    DetailedCheckHttpCustom_check:
      allOf:
      - $ref: '#/components/schemas/DetailedHttpCustomAttributes'
      - $ref: '#/components/schemas/DetailedCheckAttributes'
      - $ref: '#/components/schemas/HttpCertificateAttributes'
      type: object
    DetailedCheckTcp_check:
      allOf:
      - $ref: '#/components/schemas/DetailedTcpAttributes'
      - $ref: '#/components/schemas/DetailedCheckAttributes'
      type: object
    DetailedCheckDns_check:
      allOf:
      - $ref: '#/components/schemas/DetailedDnsAttributes'
      - $ref: '#/components/schemas/DetailedCheckAttributes'
      type: object
    DetailedCheckUdp_check:
      allOf:
      - $ref: '#/components/schemas/DetailedUdpAttributes'
      - $ref: '#/components/schemas/DetailedCheckAttributes'
      type: object
    DetailedCheckSmtp_check:
      allOf:
      - $ref: '#/components/schemas/DetailedSmtpAttributes'
      - $ref: '#/components/schemas/DetailedCheckAttributes'
      type: object
    DetailedCheckPop3_check:
      allOf:
      - $ref: '#/components/schemas/DetailedPop3Attributes'
      - $ref: '#/components/schemas/DetailedCheckAttributes'
      type: object
    DetailedCheckImap_check:
      allOf:
      - $ref: '#/components/schemas/DetailedImapAttributes'
      - $ref: '#/components/schemas/DetailedCheckAttributes'
      type: object
    credits_resp_attrs_credits:
      example:
        usedtransaction: 7
        availablesmstests: 7
        availablesms: 20
        useddefault: 6
        maxrumfilters: 10
        maxrumpageviews: 100000
        autofillsms: false
        autofillsms_amount: 0
        availablerumsites: 4
        autofillsms_when_left: 0
        usedrumsites: 1
        max_sms_overage: 0
        availablechecks: 5
        checklimit: 18
      properties:
        checklimit:
          description: Total number of check slots on this account
          example: 18
          type: integer
        availablechecks:
          description: Free check slots available for new checks
          example: 5
          type: integer
        useddefault:
          description: Total number of default check slots
          example: 6
          type: integer
        usedtransaction:
          description: Total number of transaction check slots
          example: 7
          type: integer
        availablesms:
          description: SMS credits remaining on this account
          example: 20
          type: integer
        availablesmstests:
          description: SMS provider tests remaining on this account
          example: 7
          type: integer
        autofillsms:
          description: Auto fill SMS
          example: false
          type: boolean
        autofillsms_amount:
          description: The amount of sms to purchase when "autofillsms_when_left"
            is triggered
          example: 0
          type: integer
        autofillsms_when_left:
          description: The amount of sms left that is going to trigger purchase of
            sms
          example: 0
          type: integer
        max_sms_overage:
          description: "The amount of overage SMSes that may be used, or null if SMS\
            \ overage is not enabled."
          example: 0
          type: integer
        availablerumsites:
          description: Open RUM site slots available
          example: 4
          type: integer
        usedrumsites:
          description: Number of used RUM sites
          example: 1
          type: integer
        maxrumfilters:
          description: Number of maximum rum filters
          example: 10
          type: integer
        maxrumpageviews:
          description: Number of maximum pageviews per month
          example: 100000
          type: integer
      type: object
    maintenance_resp_attrs_maintenance_inner_checks:
      description: Connected checks
      example:
        tms:
        - 123
        - 111
        uptime:
        - 506206
        - 506233
        - 222
      properties:
        uptime:
          description: List of connected Uptime checks
          example:
          - 506206
          - 506233
          - 222
          items:
            description: Id of connected Uptime check
            type: integer
          type: array
        tms:
          description: List of connected Transaction checks
          example:
          - 123
          - 111
          items:
            description: Id of connected Transaction check
            type: integer
          type: array
      type: object
    maintenance_resp_attrs_maintenance_inner:
      description: Maintenance window body
      example:
        effectiveto: 1497574800
        checks:
          tms:
          - 123
          - 111
          uptime:
          - 506206
          - 506233
          - 222
        description: Maintenance window from DB
        from: 1497520800
        id: 1
        to: 1497574800
        repeatevery: 0
        recurrencetype: week
      properties:
        id:
          description: Maintenance window identifier
          example: 1
          type: integer
        description:
          description: Description
          example: Maintenance window from DB
          type: string
        from:
          description: Initial maintenance window start. Format UNIX time.
          example: 1497520800
          type: integer
        to:
          description: Initial maintenance window end. Format UNIX time.
          example: 1497574800
          type: integer
        recurrencetype:
          description: Type of recurrence.
          enum:
          - none
          - day
          - week
          - month
          example: week
          type: string
        repeatevery:
          description: Repeat every n-th day/week/month
          example: 0
          type: integer
        effectiveto:
          description: Recurrence end. Format UNIX time.
          example: 1497574800
          type: integer
        checks:
          $ref: '#/components/schemas/maintenance_resp_attrs_maintenance_inner_checks'
      type: object
    maintenance_id_resp_attrs_maintenance_checks:
      description: Connected checks
      example:
        tms:
        - 123
        - 111
        uptime:
        - 506206
        - 506233
        - 222
      properties:
        uptime:
          description: Id of connected Uptime check
          example:
          - 506206
          - 506233
          - 222
          items:
            description: List of connected Uptime checks
            type: number
          type: array
        tms:
          description: Id of connected TMS check
          example:
          - 123
          - 111
          items:
            description: List of connected TMS checks
            type: number
          type: array
      type: object
    maintenance_id_resp_attrs_maintenance:
      description: ""
      example:
        effectiveto: 1497574800
        checks:
          tms:
          - 123
          - 111
          uptime:
          - 506206
          - 506233
          - 222
        description: Particular maintenance window
        from: 1497520800
        id: 456
        to: 1497574800
        repeatevery: 0
        recurrencetype: none
      properties:
        id:
          description: Maintenance window identifier
          example: 456
          type: number
        description:
          description: Description
          example: Particular maintenance window
          type: string
        from:
          description: Initial maintenance window start. Format UNIX time.
          example: 1497520800
          type: number
        to:
          description: Initial maintenance window end. Format UNIX time.
          example: 1497574800
          type: number
        recurrencetype:
          description: Type of recurrence.
          example: none
          type: string
        repeatevery:
          description: Repeat every n-th day/week/month
          example: 0
          type: number
        effectiveto:
          description: Recurrence end. Format UNIX time.
          example: 1497574800
          type: number
        checks:
          $ref: '#/components/schemas/maintenance_id_resp_attrs_maintenance_checks'
      type: object
    maintenance_post_resp_attrs_maintenance:
      example:
        id: 777
      properties:
        id:
          description: Unique id of the new maintenance window
          example: 777
          type: integer
      type: object
    maintenance_occurrences_id_resp_attrs_occurrence:
      example:
        maintenanceid: 44
        from: 1501714800
        id: 57
        to: 1501719300
      properties:
        id:
          description: Identifier of an occurence.
          example: 57
          type: number
        maintenanceid:
          description: Identifier of the related maintenance window.
          example: 44
          type: number
        from:
          description: Beginning of the occurrence. Format UNIX timestamp.
          example: 1501714800
          type: number
        to:
          description: The end of the occurrence. Format UNIX timestamp.
          example: 1501719300
          type: number
      type: object
    maintenance_occurrences_resp_attrs_occurrences_inner:
      description: Maintenance occurrence
      example:
        maintenanceid: 44
        from: 1501628400
        id: 455
        to: 1501632900
      properties:
        id:
          description: Identifier of an occurence.
          example: 455
          type: number
        maintenanceid:
          description: Identifier of the related maintenance window.
          example: 44
          type: number
        from:
          description: Beginning of the occurrence. Format UNIX timestamp.
          example: 1501628400
          type: number
        to:
          description: The end of the occurrence. Format UNIX timestamp.
          example: 1501632900
          type: number
      type: object
    results_resp_attrs_results_inner:
      example:
        statusdesclong: OK
        probeid: 33
        responsetime: 91
        time: 1294235764
        statusdesc: OK
        status: up
      properties:
        probeid:
          description: Probe identifier
          example: 33
          type: number
        time:
          description: Time when test was performed. Format is UNIX timestamp
          example: 1294235764
          type: number
        status:
          description: Result status
          enum:
          - up
          - down
          - unconfirmed
          - unknown
          example: up
          type: string
        responsetime:
          description: Response time (in milliseconds) (Will be 0 if no response was
            received)
          example: 91
          type: number
        statusdesc:
          description: Short status description
          example: OK
          type: string
        statusdesclong:
          description: Long status description
          example: OK
          type: string
      type: object
    single_resp_result:
      example:
        statusdesclong: OK
        probedesc: "Stockholm, Sweden"
        probeid: 17
        responsetime: 73
        statusdesc: OK
        status: up
      properties:
        status:
          description: "Test result status (up, down)"
          example: up
          type: string
        responsetime:
          description: Response time in milliseconds
          example: 73
          type: integer
        statusdesc:
          description: Short status description
          example: OK
          type: string
        statusdesclong:
          description: Long status description
          example: OK
          type: string
        probeid:
          description: Probe identifier
          example: 17
          type: integer
        probedesc:
          description: Probe description
          example: "Stockholm, Sweden"
          type: string
    summary_resp_attrs_summary_responsetime_avgresponse_oneOf_inner:
      properties:
        countryiso:
          description: Country group ISO code
          example: SE
          type: string
        probeid:
          description: Probe group probe identifier
          example: 123
          type: integer
        avgresponse:
          description: Group average response time in milliseconds
          example: 250
          type: integer
      type: object
    summary_resp_attrs_summary_responsetime_avgresponse:
      oneOf:
      - description: Total average response time in milliseconds
        example: 458
        type: integer
      - items:
          $ref: '#/components/schemas/summary_resp_attrs_summary_responsetime_avgresponse_oneOf_inner'
        type: array
    summary_resp_attrs_summary_responsetime:
      example:
        avgresponse: 458
        from: 0
        to: 1294245226
      properties:
        from:
          description: Start time of period
          example: 0
          type: number
        to:
          description: End time of period
          example: 1294245226
          type: number
        avgresponse:
          $ref: '#/components/schemas/summary_resp_attrs_summary_responsetime_avgresponse'
      type: object
    summary_resp_attrs_summary_status:
      example:
        totalup: 53072286
        totalunknown: 1240401138
        totaldown: 771879
      properties:
        totalup:
          description: Total uptime in seconds (Please note that the accuracy of this
            value is depending on your check resolution).
          example: 53072286
          type: integer
        totaldown:
          description: Total downtime in seconds (Please note that the accuracy of
            this value is depending on your check resolution).
          example: 771879
          type: integer
        totalunknown:
          description: Total unknown/unmonitored/paused in seconds (Please note that
            the accuracy of this value is depending on your check resolution. Also
            note that time before the check was created counts as unknown).
          example: 1240401138
          type: integer
      type: object
    summary_resp_attrs_summary:
      example:
        responsetime:
          avgresponse: 458
          from: 0
          to: 1294245226
        status:
          totalup: 53072286
          totalunknown: 1240401138
          totaldown: 771879
      properties:
        responsetime:
          $ref: '#/components/schemas/summary_resp_attrs_summary_responsetime'
        status:
          $ref: '#/components/schemas/summary_resp_attrs_summary_status'
      type: object
    summary_hoursofday_resp_attrs_hoursofday_inner:
      example:
        avgresponse: 299
        hour: 1
      properties:
        hour:
          description: "Hour of day (0-23). Please note that if data is missing for\
            \ an individual hour, it's entry will not be included in the result."
          example: 1
          type: number
        avgresponse:
          description: Average response time (in milliseconds) for this hour of the
            day
          example: 299
          type: number
      type: object
    summary_outage_resp_attrs_summary_states_inner:
      example:
        timefrom: 1293143523
        timeto: 1294180263
        status: up
      properties:
        status:
          description: Interval status
          enum:
          - up
          - down
          - unknown
          example: up
          type: string
        timefrom:
          description: Interval start. Format UNIX timestamp
          example: 1293143523
          type: number
        timeto:
          description: Interval end. Format UNIX timestamp
          example: 1294180263
          type: number
      type: object
    summary_outage_resp_attrs_summary:
      example:
        states:
        - timefrom: 1293143523
          timeto: 1294180263
          status: up
        - timefrom: 1293143523
          timeto: 1294180263
          status: up
      properties:
        states:
          items:
            $ref: '#/components/schemas/summary_outage_resp_attrs_summary_states_inner'
          type: array
      type: object
    summary_performance_results_inner:
      example:
        downtime: 0
        avgresponse: 468
        starttime: 1287957600
        unmonitored: 0
        uptime: 608400
      properties:
        starttime:
          description: Interval start. Format UNIX timestamp
          example: 1287957600
          type: number
        avgresponse:
          description: Average response time for this interval in milliseconds
          example: 468
          type: number
        uptime:
          description: Total uptime for this interval in seconds
          example: 608400
          type: number
        downtime:
          description: Total downtime for this interval in seconds
          example: 0
          type: number
        unmonitored:
          description: Total unmonitored time for this interval in seconds
          example: 0
          type: number
      type: object
    summary_performance_resp_attrs_summary:
      oneOf:
      - $ref: '#/components/schemas/Weeks'
      - $ref: '#/components/schemas/Days'
      - $ref: '#/components/schemas/Hours'
    SMSes_inner:
      properties:
        severity:
          description: Contact target's severity level
          type: string
        country_code:
          description: Country code
          type: string
        number:
          description: Phone number
          type: string
        provider:
          description: Provider
          type: string
      type: object
    Emails_inner:
      properties:
        severity:
          description: Contact target's severity level
          type: string
        address:
          description: Email address
          type: string
      type: object
    APNS_inner:
      properties:
        severity:
          description: Contact target's severity level
          type: string
        device_name:
          description: Contact targets's device name
          type: string
        apns_device:
          description: Contact target's apns
          type: string
      type: object
    AGCM_inner:
      properties:
        severity:
          description: Contact target's severity level
          type: string
        agcm_id:
          description: Contact target's agcm id
          type: string
      type: object
    ContactTargets_notification_targets:
      anyOf:
      - $ref: '#/components/schemas/SMSes'
      - $ref: '#/components/schemas/Emails'
      - $ref: '#/components/schemas/APNS'
      - $ref: '#/components/schemas/AGCM'
    ContactTargets_teams_inner:
      properties:
        id:
          description: Team ID
          type: integer
        name:
          description: Name of the team
          type: string
      type: object
    CreateContact_notification_targets:
      anyOf:
      - $ref: '#/components/schemas/SMSes'
      - $ref: '#/components/schemas/Emails'
    Step_args:
      description: |-
        Parameters for the operation
        The actual parameters required depend on the chosen operation
      example:
        input: input
        password: password
        seconds: seconds
        select: select
        form: form
        checkbox: checkbox
        value: value
        url: http://www.google.com
        element: element
        option: option
        radio: radio
        username: username
      properties:
        checkbox:
          type: string
          x-go-name: Checkbox
        element:
          type: string
          x-go-name: Element
        form:
          type: string
          x-go-name: Form
        input:
          type: string
          x-go-name: Input
        option:
          type: string
          x-go-name: Option
        password:
          type: string
          x-go-name: Password
        radio:
          type: string
          x-go-name: Radio
        seconds:
          type: string
          x-go-name: Seconds
        select:
          type: string
          x-go-name: Select
        url:
          example: http://www.google.com
          type: string
          x-go-name: URL
        username:
          type: string
          x-go-name: Username
        value:
          type: string
          x-go-name: Value
      type: object
      x-go-name: Parameters
    HttpAuthentications_credentials:
      description: Basic Authentication credentials to use on host
      example:
        password: secret
        userName: admin
      properties:
        password:
          description: Basic Authentication password
          example: secret
          type: string
          x-go-name: Password
        userName:
          description: Basic Authentication Username
          example: admin
          type: string
          x-go-name: UserName
      type: object
      x-go-name: Credentials
    MetadataGET_authentications:
      description: Allowed values are either an empty JSON object (no authentication)
        or Basic Authentication
      example:
        httpAuthentications:
        - credentials:
            password: secret
            userName: admin
          host: https://example.com/auth
        - credentials:
            password: secret
            userName: admin
          host: https://example.com/auth
      properties:
        httpAuthentications:
          description: "HTTP (browser-level) authentications. Currently, only Basic\
            \ Authentication is supported"
          items:
            $ref: '#/components/schemas/HttpAuthentications'
          type: array
      type: object
      x-go-name: Authentications
    ReportPerformance_report_intervals_inner_steps_inner:
      example:
        average_response: 123
        step:
          args:
            input: input
            password: password
            seconds: seconds
            select: select
            form: form
            checkbox: checkbox
            value: value
            url: http://www.google.com
            element: element
            option: option
            radio: radio
            username: username
          fn: go_to
      properties:
        step:
          $ref: '#/components/schemas/Step'
        average_response:
          description: Average response times in milliseconds
          example: 123
          format: int64
          type: integer
      type: object
    ReportPerformance_report_intervals_inner:
      example:
        downtime: 10
        average_response: 123
        from: 2020-07-10T10:51:55Z
        unmonitored: 50
        steps:
        - average_response: 123
          step:
            args:
              input: input
              password: password
              seconds: seconds
              select: select
              form: form
              checkbox: checkbox
              value: value
              url: http://www.google.com
              element: element
              option: option
              radio: radio
              username: username
            fn: go_to
        - average_response: 123
          step:
            args:
              input: input
              password: password
              seconds: seconds
              select: select
              form: form
              checkbox: checkbox
              value: value
              url: http://www.google.com
              element: element
              option: option
              radio: radio
              username: username
            fn: go_to
        uptime: 230
      properties:
        average_response:
          description: Average response times in milliseconds
          example: 123
          format: int64
          type: integer
        from:
          description: Interval start. The format is `RFC 3339`
          example: 2020-07-10T10:51:55Z
          format: date-time
          type: string
        downtime:
          description: Amount of time when the check was down within given interval
            (only with the `include_uptime` flag)
          example: 10
          format: int64
          type: integer
        uptime:
          description: Amount of time when the check was up within given interval
            (only with the `include_uptime` flag)
          example: 230
          format: int64
          type: integer
        unmonitored:
          description: Amount of time when there is no specific data about check status
            (up/down) within given interval (only with the `include_uptime` flag)
          example: 50
          format: int64
          type: integer
        steps:
          items:
            $ref: '#/components/schemas/ReportPerformance_report_intervals_inner_steps_inner'
          type: array
      type: object
    ReportPerformance_report:
      example:
        intervals:
        - downtime: 10
          average_response: 123
          from: 2020-07-10T10:51:55Z
          unmonitored: 50
          steps:
          - average_response: 123
            step:
              args:
                input: input
                password: password
                seconds: seconds
                select: select
                form: form
                checkbox: checkbox
                value: value
                url: http://www.google.com
                element: element
                option: option
                radio: radio
                username: username
              fn: go_to
          - average_response: 123
            step:
              args:
                input: input
                password: password
                seconds: seconds
                select: select
                form: form
                checkbox: checkbox
                value: value
                url: http://www.google.com
                element: element
                option: option
                radio: radio
                username: username
              fn: go_to
          uptime: 230
        - downtime: 10
          average_response: 123
          from: 2020-07-10T10:51:55Z
          unmonitored: 50
          steps:
          - average_response: 123
            step:
              args:
                input: input
                password: password
                seconds: seconds
                select: select
                form: form
                checkbox: checkbox
                value: value
                url: http://www.google.com
                element: element
                option: option
                radio: radio
                username: username
              fn: go_to
          - average_response: 123
            step:
              args:
                input: input
                password: password
                seconds: seconds
                select: select
                form: form
                checkbox: checkbox
                value: value
                url: http://www.google.com
                element: element
                option: option
                radio: radio
                username: username
              fn: go_to
          uptime: 230
        name: My awesome check
        check_id: 123
        resolution: day
      properties:
        check_id:
          description: ID of the check
          example: 123
          format: int64
          type: integer
        name:
          description: Name of the check
          example: My awesome check
          type: string
        resolution:
          description: Size of a time bucket for which the results are calculated
          enum:
          - hour
          - day
          - week
          example: day
          type: string
        intervals:
          description: Intervals for which the measurements were performed.
          items:
            $ref: '#/components/schemas/ReportPerformance_report_intervals_inner'
          type: array
      type: object
x-tagGroups:
- name: Uptime
  tags:
  - Actions
  - Analysis
  - Checks
  - Credits
  - Maintenance
  - Maintenance occurrences
  - Probes
  - Reference
  - Results
  - Single
  - Summary.average
  - Summary.hoursofday
  - Summary.outage
  - Summary.performance
  - Summary.probes
  - Traceroute
- name: Alerting settings
  tags:
  - Teams
  - Contacts
- name: Transaction
  tags:
  - TMS Checks
